
{
    "swagger":"2.0",
    "info":{
        "version":"2016.11.18",
        "title":"REST API for Oracle Process Cloud Service",
        "contact":{
            "name":"Amit Naik",
            "email":"amit.naik@oracle.com"
        },
        "description":"Use the Oracle Process Cloud Service REST API to manage analytic data, process instance archives, identities, process definitions, processes, tasks, and system information.",
        "x-summary":"Use the Oracle Process Cloud Service REST API to manage analytic data, process instance archives, identities, process definitions, processes, tasks, and system information."
    },
    "basePath":"/bpm/api/3.0",
    "tags":[
        {
            "name":"Manage Analytics",
            "description":"Retrieve preexisting analytics queries and their results."
        },
        {
            "name":"Manage Archives",
            "description":"Archive process instances and retrieve previous archives."
        },
        {
            "name":"Manage Identities",
            "description":"Retrieve information about groups, roles, and users."
        },
        {
            "name":"Manage Metadata-Catalog",
            "description":"Retrieve metadata-catalog information of the supported APIs"
        },
        {
            "name":"Manage Process Definitions",
            "description":"Retrieve process definitions, form instances, and form payloads."
        },
        {
            "name":"Manage Processes",
            "description":"Create and retrieve information about process instances."
        },
        {
            "name":"Manage Runtime",
            "description":"Retrieve supported features and system configuration information"
        },
        {
            "name":"Manage Tasks",
            "description":"Retrieve task lists. Retrieve, create, update, and delete tasks. Manage task components such as attachments, comments, forms, and payloads."
        },
        {
            "name":"Manage Webforms",
            "description":"Retrieve Web Form Definition"
        }
    ],
    "schemes":[
        "http",
        "https"
    ],
    "paths":{
        "/analytics/businessquery":{
            "get":{
                "tags":[
                    "Manage Analytics"
                ],
                "summary":"Retrieve Analytics Result for a Business Query By Query Id",
                "description":" Retrieve the analytics results after executing a saved business query with given id.",
                "operationId":"getBusinessQueryResult",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"businessQueryId",
                        "in":"query",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/AnalyticsResult"
                        }
                    },
                    "400":{
                        "description":"Bad Request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"No result found for query"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"analytics-businessquery-get"
            },
            "post":{
                "tags":[
                    "Manage Analytics"
                ],
                "summary":"Retrieve Analytics Result for a Business Query By Query Id",
                "description":" Retrieve the analytics results after executing the given business query.",
                "operationId":"executeBusinessQuery",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/BusinessQuery"
                        }
                    },
                    "400":{
                        "description":"Bad Request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"No result found for query"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"analytics-businessquery-post"
            }
        },
        "/analytics/businessquery-metadata/aggregateoperations":{
            "get":{
                "tags":[
                    "Manage Analytics"
                ],
                "summary":"Retrieve Supported Aggregate Operations",
                "description":" Retrieves list of supported aggregate operations.",
                "operationId":"getAggregateOperations",
                "produces":[
                    "application/json"
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "type":"array",
                            "items":{
                                "type":"string"
                            }
                        }
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"No result found"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"analytics-businessquery-metadata-aggregateoperations-get"
            }
        },
        "/analytics/businessquery-metadata/businessqueries":{
            "get":{
                "tags":[
                    "Manage Analytics"
                ],
                "summary":"Retrieve Business Queries",
                "description":"Returns available business queries",
                "operationId":"getBusinessQueries",
                "produces":[
                    "application/json"
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "type":"array",
                            "items":{
                                "type":"object"
                            }
                        }
                    },
                    "401":{
                        "description":"Unauthorized"
                    }
                },
                "x-internal-id":"analytics-businessquery-metadata-businessqueries-get"
            },
            "post":{
                "tags":[
                    "Manage Analytics"
                ],
                "summary":"Create Business Query",
                "description":" Creates a  business query",
                "operationId":"createBusinessQuery",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "in":"body",
                        "name":"body",
                        "description":"Business Query",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/BusinessQuery"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"successful operation",
                        "schema":{
                            "$ref":"#/definitions/Link"
                        }
                    },
                    "201":{
                        "description":"Created"
                    },
                    "400":{
                        "description":"Bad Request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"analytics-businessquery-metadata-businessqueries-post"
            }
        },
        "/analytics/businessquery-metadata/businessqueries/{businessQueryId}":{
            "get":{
                "tags":[
                    "Manage Analytics"
                ],
                "summary":"Retrieve Business Query Definition",
                "description":"Retrieves a business query definition.",
                "operationId":"getBusinessQuery",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"businessQueryId",
                        "in":"path",
                        "description":"Business Query Id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/BusinessQuery"
                        }
                    },
                    "400":{
                        "description":"Bad Request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"No result found"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"analytics-businessquery-metadata-businessqueries-{businessQueryId}-get"
            },
            "put":{
                "tags":[
                    "Manage Analytics"
                ],
                "summary":"Update Business Query",
                "description":" Updates a  business query.",
                "operationId":"updateBusinessQuery",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"businessQueryId",
                        "in":"path",
                        "description":"Business Query Id",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "in":"body",
                        "name":"body",
                        "description":"Business Query",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/BusinessQuery"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/Link"
                        }
                    },
                    "400":{
                        "description":"Bad Request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"analytics-businessquery-metadata-businessqueries-{businessQueryId}-put"
            },
            "delete":{
                "tags":[
                    "Manage Analytics"
                ],
                "summary":"Delete Business Query",
                "description":" Deletes a  business query",
                "operationId":"deleteBusinessQuery",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"businessQueryId",
                        "in":"path",
                        "description":"Business Query Id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success"
                    },
                    "400":{
                        "description":"Bad Request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"No business query found with provided id"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"analytics-businessquery-metadata-businessqueries-{businessQueryId}-delete"
            }
        },
        "/analytics/businessquery-metadata/comparisonoperators":{
            "get":{
                "tags":[
                    "Manage Analytics"
                ],
                "summary":"Retrieve Supported Comparison Operators",
                "description":" Retrieves list of supported comparison operators for a given column data type",
                "operationId":"getComparisonOperators",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"columnDataType",
                        "in":"query",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "type":"array",
                            "items":{
                                "type":"string"
                            }
                        }
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"No result found"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"analytics-businessquery-metadata-comparisonoperators-get"
            }
        },
        "/analytics/businessquery-metadata/datasources":{
            "get":{
                "tags":[
                    "Manage Analytics"
                ],
                "summary":"Retrieve Data Sources",
                "description":" Retrieves list of available analytics data sources.",
                "operationId":"getDataSources",
                "produces":[
                    "application/json"
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "type":"array",
                            "items":{
                                "type":"string"
                            }
                        }
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"No result found"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"analytics-businessquery-metadata-datasources-get"
            }
        },
        "/analytics/businessquery-metadata/datasources/{dataSource}/columns":{
            "get":{
                "tags":[
                    "Manage Analytics"
                ],
                "summary":"Retrieve Available Columns for Data Source",
                "description":" Retrieves list of available columns for a given datasource and application name;Determines the available columns by inspecting the corresponding analytics datasource.",
                "operationId":"getDataSourceColumns",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"dataSource",
                        "in":"path",
                        "description":"DataSource value",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"applicationName",
                        "in":"query",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "type":"array",
                            "items":{
                                "type":"string"
                            }
                        }
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"No result found"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"analytics-businessquery-metadata-datasources-{dataSource}-columns-get"
            }
        },
        "/analytics/dataobjects":{
            "get":{
                "tags":[
                    "Manage Analytics"
                ],
                "summary":"Retrieve list of Available DataObject Names",
                "description":" Retrieves application specific DataObjects when application name is provided",
                "operationId":"getDataObjects",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"applicationName",
                        "in":"query",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/Collection"
                        }
                    },
                    "400":{
                        "description":"Bad request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"No data objects found"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"analytics-dataobjects-get"
            }
        },
        "/analytics/dataobjects/{dataObjectName}":{
            "get":{
                "tags":[
                    "Manage Analytics"
                ],
                "summary":"Retrieve DataObject's Metadata",
                "description":" Retrieve DataObject's metadata details",
                "operationId":"getDataObjectMetaData",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"dataObjectName",
                        "in":"path",
                        "description":"DataObject Name",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/Collection"
                        }
                    },
                    "400":{
                        "description":"Bad request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"No metadata found"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"analytics-dataobjects-{dataObjectName}-get"
            }
        },
        "/analytics/dataobjects/{dataObjectName}/data":{
            "get":{
                "tags":[
                    "Manage Analytics"
                ],
                "summary":"Retrieve DataObject's data",
                "description":" Retrieves the data of given DataObject",
                "operationId":"fetchDataRecords",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"dataObjectName",
                        "in":"path",
                        "description":"DataObject Name",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"offset",
                        "in":"query",
                        "required":false,
                        "type":"integer",
                        "default":0,
                        "format":"int32"
                    },
                    {
                        "name":"limit",
                        "in":"query",
                        "required":false,
                        "type":"integer",
                        "default":3000,
                        "format":"int32"
                    },
                    {
                        "name":"since",
                        "in":"query",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"totalResults",
                        "in":"query",
                        "required":false,
                        "type":"boolean"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/Collection"
                        }
                    },
                    "400":{
                        "description":"Bad request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"No data found"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"analytics-dataobjects-{dataObjectName}-data-get"
            }
        },
        "/analytics/ootbqueries-definitions":{
            "get":{
                "tags":[
                    "Manage Analytics"
                ],
                "summary":"Retrieve OOTB Query Definitions",
                "description":" Retrieves a list of all supported OOTB queries. Response is of the Map format.",
                "operationId":"getAllOOTBQueryDefinitions",
                "produces":[
                    "application/json"
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "type":"object",
                            "additionalProperties":{
                                "type":"object"
                            }
                        }
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"analytics-ootbqueries-definitions-get"
            }
        },
        "/analytics/ootbqueries-definitions/{queryname}":{
            "get":{
                "tags":[
                    "Manage Analytics"
                ],
                "summary":"Retrieve an OOTB Query Definition",
                "description":" Retrieves the definition of given OOTB query.",
                "operationId":"getQueryDefinition",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"queryname",
                        "in":"path",
                        "description":"Query Name",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/OOTBDashboardQueryDefinition"
                        }
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"No result found for query"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"analytics-ootbqueries-definitions-{queryname}-get"
            }
        },
        "/analytics/ootbqueries/{queryname}":{
            "get":{
                "tags":[
                    "Manage Analytics"
                ],
                "summary":"Retrieve Analytics Result of an OOTB Query",
                "description":" Retrieves the analytics results after executing the given OOTB query.",
                "operationId":"getOOTBQueryResult",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"queryname",
                        "in":"path",
                        "description":"Query Name",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"processNames",
                        "in":"query",
                        "required":false,
                        "type":"array",
                        "items":{
                            "type":"string"
                        },
                        "collectionFormat":"multi"
                    },
                    {
                        "name":"assigneeType",
                        "in":"query",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"topN",
                        "in":"query",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"since",
                        "in":"query",
                        "required":false,
                        "type":"integer",
                        "format":"int32"
                    },
                    {
                        "name":"applicationName",
                        "in":"query",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/AnalyticsResult"
                        }
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"No result found for query"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"analytics-ootbqueries-{queryname}-get"
            }
        },
        "/archives":{
            "get":{
                "tags":[
                    "Manage Archives"
                ],
                "summary":"List Archive Export Jobs",
                "description":" Lists the available archive export jobs in JSON format.",
                "operationId":"getArchives",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"Maximum number of archive export jobs to list - default 25",
                        "required":false,
                        "type":"integer",
                        "default":25,
                        "format":"int32"
                    },
                    {
                        "name":"offset",
                        "in":"query",
                        "description":"The offset value - default 0",
                        "required":false,
                        "type":"integer",
                        "default":0,
                        "format":"int32"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/Archives"
                        }
                    },
                    "400":{
                        "description":"Bad request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    }
                },
                "x-internal-id":"archives-get"
            },
            "post":{
                "tags":[
                    "Manage Archives"
                ],
                "summary":"Archive Process Instances",
                "description":" The POST returns the canonical URI and job ID for the archive; the deleteInstances=true option, which deletes archived process instances from Workspace, is a property of the payload; When deleteInstances=true is set, you must also set deleteRetention in XML dateTime format; After creating an archive, you cannot create another archive for the same application for 24 hours.",
                "operationId":"requestArchive",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "in":"body",
                        "name":"body",
                        "description":"ArchiveRequest to be processed",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/ArchiveRequest"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Process Instances successfully archived.",
                        "schema":{
                            "$ref":"#/definitions/RequestResponse"
                        }
                    },
                    "400":{
                        "description":"Bad request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"archives-post"
            }
        },
        "/archives/{id}":{
            "get":{
                "tags":[
                    "Manage Archives"
                ],
                "summary":"Retrieve a Process Instance Archive",
                "description":"Retrieves a completed process instance archive by archive ID. Get the ID from the POST response body.",
                "operationId":"getArchive",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "description":"Value of Archive ID. Get the ID from the POST response body",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/Archive"
                        }
                    },
                    "400":{
                        "description":"Bad request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    }
                },
                "x-internal-id":"archives-{id}-get"
            }
        },
        "/archives/{id}/exports":{
            "get":{
                "tags":[
                    "Manage Archives"
                ],
                "summary":"List Process Instance Archives",
                "description":" Lists previously exported process instance archives, in JSON format, that are available for download, as a list of canonical links.",
                "operationId":"getExports",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "description":"Value of Archive ID. Get the ID from the POST response body",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"Maximum number of archive export jobs to list - default 25",
                        "required":false,
                        "type":"integer",
                        "default":25,
                        "format":"int32"
                    },
                    {
                        "name":"offset",
                        "in":"query",
                        "description":"The offset value - default 0",
                        "required":false,
                        "type":"integer",
                        "default":0,
                        "format":"int32"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/Exports"
                        }
                    },
                    "400":{
                        "description":"Bad request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    }
                },
                "x-internal-id":"archives-{id}-exports-get"
            }
        },
        "/archives/{id}/exports/{part}":{
            "get":{
                "tags":[
                    "Manage Archives"
                ],
                "summary":"Download a Process Instance Archive File",
                "description":" Returns a previously exported process instance archive file as a stream. An archive can be in multiple files, or parts. If you are using cURL, use the -o option to save the response to a file.",
                "operationId":"downloadArchive",
                "produces":[
                    "application/octet-stream"
                ],
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "description":"Value of Archive ID. Get the ID from the POST response body",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"part",
                        "in":"path",
                        "description":"Value of the part to download.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success"
                    },
                    "204":{
                        "description":"No Content.The archive is not available."
                    },
                    "400":{
                        "description":"Bad request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"archives-{id}-exports-{part}-get"
            }
        },
        "/identities":{
            "get":{
                "tags":[
                    "Manage Identities"
                ],
                "summary":"Retrieve Identities",
                "description":" Retrieves roles, groups and users",
                "operationId":"getIdentities",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"searchPattern",
                        "in":"query",
                        "description":"Pattern to search for, for example identities?searchPattern=admin",
                        "required":false,
                        "type":"string",
                        "default":"*"
                    },
                    {
                        "name":"scope",
                        "in":"query",
                        "description":"Search scope - all (default), user, group, role",
                        "required":false,
                        "type":"string",
                        "default":"all"
                    },
                    {
                        "name":"firstname",
                        "in":"query",
                        "description":"First name of the identity to search",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"lastname",
                        "in":"query",
                        "description":"Last name of the identity to search",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"email",
                        "in":"query",
                        "description":"Email of the identity to search",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"Maximum number of identities to be retrieved - default 25",
                        "required":false,
                        "type":"integer",
                        "default":25,
                        "format":"int32"
                    },
                    {
                        "name":"offset",
                        "in":"query",
                        "description":"The offset value - default 0",
                        "required":false,
                        "type":"integer",
                        "default":0,
                        "format":"int32"
                    },
                    {
                        "name":"totalResult",
                        "in":"query",
                        "description":"Total Result - true or false",
                        "required":false,
                        "type":"boolean",
                        "default":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/Collection"
                        }
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"Identities not found"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"identities-get"
            }
        },
        "/identities/group/{groupid}":{
            "get":{
                "tags":[
                    "Manage Identities"
                ],
                "summary":"Retrieve a Group",
                "description":" Retrieves a group by group ID.",
                "operationId":"getGroup",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"groupid",
                        "in":"path",
                        "description":"The value of the group ID",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/Group"
                        }
                    },
                    "400":{
                        "description":"Bad request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"Group not found for ID"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"identities-group-{groupid}-get"
            }
        },
        "/identities/group/{groupid}/users":{
            "get":{
                "tags":[
                    "Manage Identities"
                ],
                "summary":"Retrieve Users in a Group",
                "description":" Retrieves user details of a group by group ID",
                "operationId":"getUsersInGroup",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"groupid",
                        "in":"path",
                        "description":"The value of the group ID",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"totalResult",
                        "in":"query",
                        "description":"Total Result - true or false",
                        "required":false,
                        "type":"boolean",
                        "default":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/Collection"
                        }
                    },
                    "400":{
                        "description":"Bad request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"Users not found for group ID"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"identities-group-{groupid}-users-get"
            }
        },
        "/identities/loggedInUser":{
            "get":{
                "tags":[
                    "Manage Identities"
                ],
                "summary":"Retrieve Logged in User",
                "description":" Retrieves user details of a logged in user",
                "operationId":"loggedInUser",
                "produces":[
                    "application/json"
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/User"
                        }
                    },
                    "400":{
                        "description":"Bad request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"User not found"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"identities-loggedInUser-get"
            }
        },
        "/identities/role/{roleid}":{
            "get":{
                "tags":[
                    "Manage Identities"
                ],
                "summary":"Retrieve a Role",
                "description":" Retrieves a user role by role ID.",
                "operationId":"getRole",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"roleid",
                        "in":"path",
                        "description":"The value of the role ID",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/Role"
                        }
                    },
                    "400":{
                        "description":"Bad request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"Role not found for ID"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"identities-role-{roleid}-get"
            }
        },
        "/identities/user/{userid}":{
            "get":{
                "tags":[
                    "Manage Identities"
                ],
                "summary":"Retrieve a User",
                "description":" Retrieve a user by user ID.",
                "operationId":"getUser",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"userid",
                        "in":"path",
                        "description":"The value of the user ID",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/User"
                        }
                    },
                    "400":{
                        "description":"Bad request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"User not found for ID"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"identities-user-{userid}-get"
            }
        },
        "/metadata-catalog":{
            "get":{
                "tags":[
                    "Manage Metadata-Catalog"
                ],
                "summary":"Retrieve Metadata Catalog for All APIs",
                "description":" Retrieves metadata catalog for all APIs",
                "operationId":"getMetadataCatalog",
                "produces":[
                    "application/json"
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/MetadataCatalog"
                        }
                    },
                    "400":{
                        "description":"Bad request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"metadata-catalog-get"
            }
        },
        "/metadata-catalog/{resourceName}":{
            "get":{
                "tags":[
                    "Manage Metadata-Catalog"
                ],
                "summary":"Retrieve All Resource Schema",
                "description":" Retrieves the resource schema for all services supported in REST",
                "operationId":"getResourceSchema",
                "produces":[
                    "application/schema+json"
                ],
                "parameters":[
                    {
                        "name":"resourceName",
                        "in":"path",
                        "description":"resource name",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "type":"object",
                            "additionalProperties":{
                                "type":"string"
                            }
                        }
                    },
                    "400":{
                        "description":"Bad request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "500":{
                        "description":"Something went wrong"
                    }
                },
                "x-internal-id":"metadata-catalog-{resourceName}-get"
            }
        },
        "/process-definitions":{
            "get":{
                "tags":[
                    "Manage Process Definitions"
                ],
                "summary":"Retrieve Process Definitions",
                "description":" Retrieves process definitions.",
                "operationId":"getDefinitions",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"interfaceFilter",
                        "in":"query",
                        "description":"Filters the process definitions based on start type, currently supports filters for form based start (includes both webForm and basicForm), webForm based start, basicForm based start, doc based start and folder based start.",
                        "required":false,
                        "type":"string",
                        "default":"all",
                        "enum":[
                            "all",
                            "form",
                            "noForm",
                            "basicForm",
                            "webForm",
                            "doc",
                            "folder"
                        ]
                    },
                    {
                        "name":"showProcessInstancesCount",
                        "in":"query",
                        "description":"True to get processcount else false",
                        "required":false,
                        "type":"string",
                        "default":"false"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/ProcessDefs"
                        }
                    },
                    "500":{
                        "description":"Error in retrieving the process definitions"
                    }
                },
                "x-internal-id":"process-definitions-get"
            }
        },
        "/process-definitions/{processDefId}/conversations":{
            "get":{
                "tags":[
                    "Manage Process Definitions"
                ],
                "summary":"Retrieve List of Conversations",
                "description":" Retrieves the conversations metadata associated with a given process definition ID.",
                "operationId":"getConversations",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"processDefId",
                        "in":"path",
                        "description":"Value of process definition ID.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"name",
                        "in":"query",
                        "description":"Retrieves only the conversation for the specified conversation name",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success. Returns the conversations metadata or empty list when there aren't any.",
                        "schema":{
                            "$ref":"#/definitions/Conversations"
                        }
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "500":{
                        "description":"Error in retrieving the conversations"
                    }
                },
                "x-internal-id":"process-definitions-{processDefId}-conversations-get"
            }
        },
        "/process-definitions/{processDefId}/conversations/{conversationName}":{
            "get":{
                "tags":[
                    "Manage Process Definitions"
                ],
                "summary":"Retrieve the conversation metadata",
                "description":" Retrieves the conversation metadata for a conversation associated with a process definition ID.",
                "operationId":"getConversation",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"processDefId",
                        "in":"path",
                        "description":"Value of process definition ID.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"conversationName",
                        "in":"path",
                        "description":"Conversation name",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success. Returns the conversations metadata or empty list when there aren't any.",
                        "schema":{
                            "$ref":"#/definitions/Conversation"
                        }
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "500":{
                        "description":"Error in retrieving the conversations metadata information"
                    }
                },
                "x-internal-id":"process-definitions-{processDefId}-conversations-{conversationName}-get"
            }
        },
        "/process-definitions/{processDefId}/documents":{
            "get":{
                "tags":[
                    "Manage Process Definitions"
                ],
                "summary":"Retrieve the documents metadata",
                "description":" Retrieves the documents metadata information for a given process definition ID.",
                "operationId":"getDocuments",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"processDefId",
                        "in":"path",
                        "description":"Value of process definition ID.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"expanded",
                        "in":"query",
                        "description":"Value of all fields that are to be expanded (detailed) - all,incoming-folders, managed-folders, incoming-documents, none. If not specified Links to each of the fields is returned.",
                        "required":false,
                        "type":"string",
                        "default":"none"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success. Returns the folders and documents.",
                        "schema":{
                            "$ref":"#/definitions/Documents"
                        }
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "500":{
                        "description":"Error in retrieving the folders and documents information"
                    }
                },
                "x-internal-id":"process-definitions-{processDefId}-documents-get"
            }
        },
        "/process-definitions/{processDefId}/documents/incoming-documents":{
            "get":{
                "tags":[
                    "Manage Process Definitions"
                ],
                "summary":"Retrieve the incoming documents metadata",
                "description":" Retrieves the folders metadata information for a given process definition ID.",
                "operationId":"getIncomingDocuments",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"processDefId",
                        "in":"path",
                        "description":"Value of process definition ID.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"name",
                        "in":"query",
                        "description":"Retrieves only the document for the specified document name",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success. Returns the documents."
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "500":{
                        "description":"Error in retrieving the document information"
                    }
                },
                "x-internal-id":"process-definitions-{processDefId}-documents-incoming-documents-get"
            }
        },
        "/process-definitions/{processDefId}/documents/incoming-documents/{documentName}":{
            "get":{
                "tags":[
                    "Manage Process Definitions"
                ],
                "summary":"Retrieve an incoming document metadata",
                "description":" Retrieves the incoming document metadata information for a given incoming document and a process definition ID.",
                "operationId":"getIncomingDocument",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"processDefId",
                        "in":"path",
                        "description":"Value of process definition ID.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"documentName",
                        "in":"path",
                        "description":"Name of the document.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success. Returns the incoming document metadata.",
                        "schema":{
                            "$ref":"#/definitions/IncomingDocument"
                        }
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "500":{
                        "description":"Error in retrieving the incoming document metadata information"
                    }
                },
                "x-internal-id":"process-definitions-{processDefId}-documents-incoming-documents-{documentName}-get"
            }
        },
        "/process-definitions/{processDefId}/documents/incoming-folders":{
            "get":{
                "tags":[
                    "Manage Process Definitions"
                ],
                "summary":"Retrieve the incoming folders metadata",
                "description":" Retrieves the folders metadata information for a given process definition ID.",
                "operationId":"getIncomingFolders",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"processDefId",
                        "in":"path",
                        "description":"Value of process definition ID.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"name",
                        "in":"query",
                        "description":"Retrieves only the folder for the specified folder name",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success. Returns the folders.",
                        "schema":{
                            "$ref":"#/definitions/IncomingFolders"
                        }
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "500":{
                        "description":"Error in retrieving the folder information"
                    }
                },
                "x-internal-id":"process-definitions-{processDefId}-documents-incoming-folders-get"
            }
        },
        "/process-definitions/{processDefId}/documents/incoming-folders/{folderName}":{
            "get":{
                "tags":[
                    "Manage Process Definitions"
                ],
                "summary":"Retrieve an incoming folder metadata",
                "description":" Retrieves the folder metadata information for a given folder and a process definition ID.",
                "operationId":"getIncomingFolder",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"processDefId",
                        "in":"path",
                        "description":"Value of process definition ID.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"folderName",
                        "in":"path",
                        "description":"Name of the folder.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success. Returns the folder.",
                        "schema":{
                            "$ref":"#/definitions/IncomingFolder"
                        }
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "500":{
                        "description":"Error in retrieving the folder information"
                    }
                },
                "x-internal-id":"process-definitions-{processDefId}-documents-incoming-folders-{folderName}-get"
            }
        },
        "/process-definitions/{processDefId}/documents/managed-folders":{
            "get":{
                "tags":[
                    "Manage Process Definitions"
                ],
                "summary":"Retrieve the managed folders metadata",
                "description":" Retrieves the folders metadata information for a given process definition ID.",
                "operationId":"getManagedFolders",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"processDefId",
                        "in":"path",
                        "description":"Value of process definition ID.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"name",
                        "in":"query",
                        "description":"Retrieves only the folder for the specified folder name",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"startupFlag",
                        "in":"query",
                        "description":"Retrieves the default startup folder if true, else (default) returns all folders",
                        "required":false,
                        "type":"boolean",
                        "default":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success. Returns the folders."
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "500":{
                        "description":"Error in retrieving the folder information"
                    }
                },
                "x-internal-id":"process-definitions-{processDefId}-documents-managed-folders-get"
            }
        },
        "/process-definitions/{processDefId}/documents/managed-folders/{folderName}":{
            "get":{
                "tags":[
                    "Manage Process Definitions"
                ],
                "summary":"Retrieve a managed folder metadata",
                "description":" Retrieves the folder metadata information for a given folder and a process definition ID.",
                "operationId":"getManagedFolder",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"processDefId",
                        "in":"path",
                        "description":"Value of process definition ID.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"folderName",
                        "in":"path",
                        "description":"Name of the folder.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success. Returns the folders."
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "500":{
                        "description":"Error in retrieving the folder information"
                    }
                },
                "x-internal-id":"process-definitions-{processDefId}-documents-managed-folders-{folderName}-get"
            }
        },
        "/process-definitions/{processDefId}/startFolderName":{
            "get":{
                "tags":[
                    "Manage Process Definitions"
                ],
                "summary":"Retrieve the startup folder name",
                "description":" Retrieves the start folder name for a given process definition ID.",
                "operationId":"getStartupFolder",
                "produces":[
                    "text/plain"
                ],
                "parameters":[
                    {
                        "name":"processDefId",
                        "in":"path",
                        "description":"Value of process definition ID.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success. Returns the startup folder name."
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "500":{
                        "description":"Error in retrieving the startup folder name"
                    }
                },
                "x-internal-id":"process-definitions-{processDefId}-startFolderName-get"
            }
        },
        "/process-definitions/{processDefId}/{serviceName}/form":{
            "get":{
                "tags":[
                    "Manage Process Definitions"
                ],
                "summary":"Retrieve a Form Instance",
                "description":" Retrieves the form instance for the process definitions with the given ID",
                "operationId":"getFormInstance",
                "produces":[
                    "multipart/mixed"
                ],
                "parameters":[
                    {
                        "name":"processDefId",
                        "in":"path",
                        "description":"Value of process definition ID.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"serviceName",
                        "in":"path",
                        "description":"Value of service name of the process.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"operation",
                        "in":"query",
                        "description":"Specifies the operation performed. Use the Retrieve Process Definitions endpoint to list process definition data, including operations.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"includeAttachments",
                        "in":"query",
                        "description":"If true (default), returns any saved attachments as body parts along with the form URL",
                        "required":false,
                        "type":"boolean",
                        "default":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success. Returns a multipart response. The first body part is a plain text containing the form instance URL. The remaining body parts will be attachments if the process contains any saved attachments."
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "500":{
                        "description":"Error in retrieving the form Instance URL"
                    }
                },
                "x-internal-id":"process-definitions-{processDefId}-{serviceName}-form-get"
            }
        },
        "/process-definitions/{processDefId}/{serviceName}/form/payload":{
            "get":{
                "tags":[
                    "Manage Process Definitions"
                ],
                "summary":"Retrieve a Form Payload",
                "description":" Retrieves the form payload for the given form instance URL.",
                "operationId":"getFrevvoPayload",
                "produces":[
                    "text/plain"
                ],
                "parameters":[
                    {
                        "name":"processDefId",
                        "in":"path",
                        "description":"Value of process definition ID.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"serviceName",
                        "in":"path",
                        "description":"Value of service name of the process.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"formInstanceURL",
                        "in":"query",
                        "description":"Value of the form instance URL whose payload is to be retrieved.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"operation",
                        "in":"query",
                        "description":"Specifies the operation performed. Use the Retrieve Process Definitions endpoint to list process definition data, including operations.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success. Returns the form payload value.",
                        "schema":{
                            "type":"string"
                        }
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "500":{
                        "description":"Error in retrieving the form payload"
                    }
                },
                "x-internal-id":"process-definitions-{processDefId}-{serviceName}-form-payload-get"
            }
        },
        "/process-definitions/{processDefId}/{serviceName}/webform":{
            "get":{
                "tags":[
                    "Manage Process Definitions"
                ],
                "summary":"Retrieve a Form Instance for a Webform",
                "description":" Retrieves the form instance for the process definitions with the given ID",
                "operationId":"getWebFormMultipart",
                "produces":[
                    "multipart/mixed"
                ],
                "parameters":[
                    {
                        "name":"processDefId",
                        "in":"path",
                        "description":"Value of process definition ID.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"serviceName",
                        "in":"path",
                        "description":"Value of service name of the process.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"operation",
                        "in":"query",
                        "description":"Specifies the operation performed. Use the Retrieve Process Definitions endpoint to list process definition data, including operations.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"includeAttachments",
                        "in":"query",
                        "description":"If true (default), returns any saved attachments as body parts along with the form URL",
                        "required":false,
                        "type":"boolean",
                        "default":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success. Returns a multipart response. The first body part is a JSON containing the form instance URL and optional payload if saved earlier. The remaining body parts will be attachments if the process contains any saved attachments."
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"Form not found."
                    },
                    "500":{
                        "description":"Error in retrieving the form Instance URL"
                    }
                },
                "x-internal-id":"process-definitions-{processDefId}-{serviceName}-webform-get"
            }
        },
        "/processes":{
            "get":{
                "tags":[
                    "Manage Processes"
                ],
                "summary":"Retrieves Process Instance List",
                "description":" Retrieves process instance list",
                "operationId":"getProcesses",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"view",
                        "in":"query",
                        "description":"View name",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"processDefId",
                        "in":"query",
                        "description":"Process definition ID",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"processName",
                        "in":"query",
                        "description":"Processinstance name",
                        "required":false,
                        "type":"array",
                        "items":{
                            "type":"string"
                        },
                        "collectionFormat":"multi"
                    },
                    {
                        "name":"priority",
                        "in":"query",
                        "description":"Process priority from 1 (highest) to 5 (lowest) or Any (default)",
                        "required":false,
                        "type":"array",
                        "items":{
                            "type":"string"
                        },
                        "collectionFormat":"multi"
                    },
                    {
                        "name":"processOwner",
                        "in":"query",
                        "description":"Process instance owner",
                        "required":false,
                        "type":"array",
                        "items":{
                            "type":"string"
                        },
                        "collectionFormat":"multi"
                    },
                    {
                        "name":"processCreator",
                        "in":"query",
                        "description":"Process instance creator",
                        "required":false,
                        "type":"array",
                        "items":{
                            "type":"string"
                        },
                        "collectionFormat":"multi"
                    },
                    {
                        "name":"processState",
                        "in":"query",
                        "description":"Process state",
                        "required":false,
                        "type":"array",
                        "items":{
                            "type":"string",
                            "default":"OPEN"
                        },
                        "collectionFormat":"multi"
                    },
                    {
                        "name":"assignmentFilter",
                        "in":"query",
                        "description":"Assignment filter",
                        "required":false,
                        "type":"string",
                        "default":"MY_AND_GROUP"
                    },
                    {
                        "name":"dueDateFrom",
                        "in":"query",
                        "description":"Start of due date range in the format yyyy-mm-dd hh:mm:ss",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"dueDateTo",
                        "in":"query",
                        "description":"End of due date range in the format yyyy-mm-dd hh:mm:ss",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"Maximum number of items per page, between 1 and 100, default 25",
                        "required":false,
                        "type":"integer",
                        "default":25,
                        "format":"int32"
                    },
                    {
                        "name":"offset",
                        "in":"query",
                        "description":"Index for the first item on a page of list items",
                        "required":false,
                        "type":"integer",
                        "default":0,
                        "format":"int32"
                    },
                    {
                        "name":"orderBy",
                        "in":"query",
                        "description":"Field with which results are to be ordered",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"totalResult",
                        "in":"query",
                        "description":"Total Result - true or false",
                        "required":false,
                        "type":"boolean",
                        "default":true
                    },
                    {
                        "name":"since",
                        "in":"query",
                        "description":"Returned items must be created or updated later than the specified time, format yyyy-mm-dd hh:mm:ss",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"until",
                        "in":"query",
                        "description":"Returned items must be created or updated before the specified time, format yyyy-mm-dd hh:mm:ss",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/Collection"
                        }
                    },
                    "400":{
                        "description":"Bad request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"Process list not found"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"processes-get"
            },
            "post":{
                "tags":[
                    "Manage Processes"
                ],
                "summary":"Create a Process Instance",
                "description":"Creates a new process instance or saves a process instance based on the value of action in the input. The resource takes a multipart input if looking to create a process instance with attachments - JSON as first body  part and attachments as the remaining body parts. The process instance can also be created with only JSON payload to create a process instance if attachments are not needed. The operation and serviceName values in the input payload are optional - if not specified 'operation' defaults to 'start'.",
                "operationId":"postMessageJson",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "in":"body",
                        "name":"body",
                        "description":"MessageInput",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/MessageInput"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Process Instance succesfully created",
                        "schema":{
                            "$ref":"#/definitions/ProcessInstance"
                        }
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"processes-post"
            },
            "put":{
                "tags":[
                    "Manage Processes"
                ],
                "summary":"Perform Actions on List of Instances",
                "description":" Performs actions on instance list",
                "operationId":"performActionsOnInstanceList",
                "produces":[
                    "application/json",
                    "text/plain"
                ],
                "parameters":[
                    {
                        "in":"body",
                        "name":"body",
                        "description":"Value of process IDs and update states",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/Action"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success"
                    },
                    "304":{
                        "description":"Not Modified"
                    },
                    "403":{
                        "description":"Forbidden"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"processes-put"
            }
        },
        "/processes/{processId}":{
            "get":{
                "tags":[
                    "Manage Processes"
                ],
                "summary":"Retrieve a Process Instance",
                "description":" Retrieves a process instance",
                "operationId":"getProcess",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"processId",
                        "in":"path",
                        "description":"Value of process ID.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"isProcessNumberFlag",
                        "in":"query",
                        "description":"Value of processNumber, if true it will fetch process instance by number, if false it will return process instance by instanceId",
                        "required":false,
                        "type":"boolean",
                        "default":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/ProcessInstance"
                        }
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"processes-{processId}-get"
            },
            "put":{
                "tags":[
                    "Manage Processes"
                ],
                "summary":"Update the Process State",
                "description":" Updates the state of the  process to the action value. ",
                "operationId":"performProcessAction",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json",
                    "text/plain"
                ],
                "parameters":[
                    {
                        "name":"processId",
                        "in":"path",
                        "description":"Value of process ID",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "in":"body",
                        "name":"body",
                        "description":"Payload of process",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/Action"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success"
                    },
                    "304":{
                        "description":"Not Modified"
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"Not Found"
                    },
                    "500":{
                        "description":"Internal server error"
                    }
                },
                "x-internal-id":"processes-{processId}-put"
            }
        },
        "/processes/{processId}/attachments":{
            "get":{
                "tags":[
                    "Manage Processes"
                ],
                "summary":"Retrieve Attachment List for a Process Instance",
                "description":" Retrieves a list of attachments for a process instance.",
                "operationId":"getProcessAttachments",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"processId",
                        "in":"path",
                        "description":"Value of process ID",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"processes-{processId}-attachments-get"
            },
            "post":{
                "tags":[
                    "Manage Processes"
                ],
                "summary":"Add Attachment to the Process",
                "description":" Adds attachments to a process. ",
                "operationId":"addProcessAttachment",
                "consumes":[
                    "multipart/mixed"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"processId",
                        "in":"path",
                        "description":"Value of process ID",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "in":"body",
                        "name":"body",
                        "description":"multiPartAttachment",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/MultiPart"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success"
                    },
                    "500":{
                        "description":"Internal server error"
                    }
                },
                "x-internal-id":"processes-{processId}-attachments-post"
            }
        },
        "/processes/{processId}/attachments/{attachmentId}":{
            "delete":{
                "tags":[
                    "Manage Processes"
                ],
                "summary":"Delete Process Attachments",
                "description":" Deletes process attachments.",
                "operationId":"deleteProcessAttachment",
                "produces":[
                    "text/plain"
                ],
                "parameters":[
                    {
                        "name":"processId",
                        "in":"path",
                        "description":"Value of process ID",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"attachmentId",
                        "in":"path",
                        "description":"Value of attachment name",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success"
                    },
                    "403":{
                        "description":"Forbidden"
                    },
                    "500":{
                        "description":"Internal server error"
                    }
                },
                "x-internal-id":"processes-{processId}-attachments-{attachmentId}-delete"
            }
        },
        "/processes/{processId}/audit":{
            "get":{
                "tags":[
                    "Manage Processes"
                ],
                "summary":"Retrieve Audit Diagram of Process Instance",
                "description":" Retrieves the audit diagram of a process instance.",
                "operationId":"getAuditDiagram",
                "produces":[
                    "image/png",
                    "application/json",
                    "text/plain"
                ],
                "parameters":[
                    {
                        "name":"processId",
                        "in":"path",
                        "description":"Value of process ID",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"graphic",
                        "in":"query",
                        "description":"Value of graphic mode, true for png output, false for histories",
                        "required":false,
                        "type":"boolean",
                        "default":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"processes-{processId}-audit-get"
            }
        },
        "/processes/{processId}/comments":{
            "get":{
                "tags":[
                    "Manage Processes"
                ],
                "summary":"Retrieve Comment List for a Process Instance",
                "description":" Retrieves a list of comments for a process instance.",
                "operationId":"getProcessComments",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"processId",
                        "in":"path",
                        "description":"Value of process ID",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success"
                    },
                    "403":{
                        "description":"Forbidden"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"processes-{processId}-comments-get"
            },
            "post":{
                "tags":[
                    "Manage Processes"
                ],
                "summary":"Add Comment to the Process",
                "description":" Adds comments to a process",
                "operationId":"addProcessComments",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"processId",
                        "in":"path",
                        "description":"Value of process ID",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "in":"body",
                        "name":"body",
                        "description":"CommentRequest",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/CommentRequest"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success"
                    },
                    "500":{
                        "description":"Internal server error"
                    }
                },
                "x-internal-id":"processes-{processId}-comments-post"
            }
        },
        "/processes/{processId}/conversations":{
            "get":{
                "tags":[
                    "Manage Processes"
                ],
                "summary":"Retrieve Conversations for a Process Instance",
                "description":"Retrieve conversations associated with the process instance.",
                "operationId":"getProcessConversations",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"processId",
                        "in":"path",
                        "description":"Value of process ID.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"name",
                        "in":"query",
                        "description":"Retrieves only the conversation for the specified conversation name",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success. Returns the conversations or empty list when there aren't any.",
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/ConversationInstance"
                            }
                        }
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "500":{
                        "description":"Error in retrieving the conversation information"
                    }
                },
                "x-internal-id":"processes-{processId}-conversations-get"
            }
        },
        "/processes/{processId}/conversations/{conversationId}":{
            "get":{
                "tags":[
                    "Manage Processes"
                ],
                "summary":"Retrieve a Conversation for a Process Instance",
                "description":"Retrieve conversations associated with the process instance based on conversationId.",
                "operationId":"getProcessConversation",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"processId",
                        "in":"path",
                        "description":"Value of process ID.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"conversationId",
                        "in":"path",
                        "description":"Value of conversation ID.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success. Returns the conversations or empty list when there aren't any.",
                        "schema":{
                            "$ref":"#/definitions/ConversationInstance"
                        }
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "500":{
                        "description":"Error in retrieving the conversation information"
                    }
                },
                "x-internal-id":"processes-{processId}-conversations-{conversationId}-get"
            }
        },
        "/processes/{processId}/folders":{
            "get":{
                "tags":[
                    "Manage Processes"
                ],
                "summary":"Retrieve list of DOCs Folders for a Process Instance",
                "description":" Retrieves the DOCs folders associated with a process.",
                "operationId":"getProcessFolders",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"processId",
                        "in":"path",
                        "description":"Value of Process ID",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"name",
                        "in":"query",
                        "description":"Retrieves only the folder for the specified folder name",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/DcsFolders"
                        }
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"processes-{processId}-folders-get"
            }
        },
        "/processes/{processId}/folders/{folderId}":{
            "get":{
                "tags":[
                    "Manage Processes"
                ],
                "summary":"Retrieve DOCs folder details for a Process Instance",
                "description":" Retrieves the folder details for a given folder associated with a process.",
                "operationId":"getProcessFolderById",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"processId",
                        "in":"path",
                        "description":"Value of Process Id",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"folderId",
                        "in":"path",
                        "description":"Folder ID",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/DcsFolder"
                        }
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"processes-{processId}-folders-{folderId}-get"
            }
        },
        "/runtime":{
            "get":{
                "tags":[
                    "Manage Runtime"
                ],
                "summary":"Retrieve Supported Feature List",
                "description":" Retrieves list of features supported by runtime.",
                "operationId":"getRuntime",
                "produces":[
                    "application/json"
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/BPMRuntimeInfo"
                        }
                    },
                    "500":{
                        "description":"Something went wrong"
                    }
                },
                "x-internal-id":"runtime-get"
            }
        },
        "/tasks":{
            "get":{
                "tags":[
                    "Manage Tasks"
                ],
                "summary":"Retrieve a Task List",
                "description":" Retrieves a task list for the current user.",
                "operationId":"getTasks",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"status",
                        "in":"query",
                        "description":"Task status",
                        "required":false,
                        "type":"string",
                        "default":"ASSIGNED",
                        "enum":[
                            "ASSIGNED",
                            "SUSPENDED",
                            "WITHDRAWN",
                            "EXPIRED",
                            "ERROR",
                            "ALERTED",
                            "NEED_INFORMATION"
                        ]
                    },
                    {
                        "name":"priority",
                        "in":"query",
                        "description":"Task priority from 1 (highest) to 5 (lowest) or Any (default)",
                        "required":false,
                        "type":"array",
                        "items":{
                            "type":"string"
                        },
                        "collectionFormat":"multi"
                    },
                    {
                        "name":"dueDateFrom",
                        "in":"query",
                        "description":"Start of due date range in the format yyyy-mm-dd hh:mm:ss",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"dueDateTo",
                        "in":"query",
                        "description":"End of due date range in the format yyyy-mm-dd hh:mm:ss",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"assignment",
                        "in":"query",
                        "description":"Task assignees - MY, GROUP, MY_AND_GROUP (default), MY_AND_GROUP_ALL, REPORTEES, OWNER, REVIEWER, PREVIOUS, ALL, ADMIN",
                        "required":false,
                        "type":"string",
                        "default":"MY_AND_GROUP"
                    },
                    {
                        "name":"keyword",
                        "in":"query",
                        "description":"Keyword in task title",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"fromuser",
                        "in":"query",
                        "description":"Previous task assignee in process",
                        "required":false,
                        "type":"array",
                        "items":{
                            "type":"string"
                        },
                        "collectionFormat":"multi"
                    },
                    {
                        "name":"process",
                        "in":"query",
                        "description":"Includes only tasks in a given process",
                        "required":false,
                        "type":"array",
                        "items":{
                            "type":"string"
                        },
                        "collectionFormat":"multi"
                    },
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"Maximum number of items per page, between 1 and 100, default 25",
                        "required":false,
                        "type":"integer",
                        "default":25,
                        "format":"int32"
                    },
                    {
                        "name":"offset",
                        "in":"query",
                        "description":"Index for the first item on a page of list items",
                        "required":false,
                        "type":"integer",
                        "default":0,
                        "format":"int32"
                    },
                    {
                        "name":"orderBy",
                        "in":"query",
                        "description":"Field with which results are to be ordered. Given as orderBy=fieldname:asc/desc default is asc for ascending.",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "in":"query",
                        "description":"Displays only the selected task attributes",
                        "required":false,
                        "type":"array",
                        "items":{
                            "type":"string"
                        },
                        "collectionFormat":"multi"
                    },
                    {
                        "name":"pattern",
                        "in":"query",
                        "description":"Filters tasks",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"showAction",
                        "in":"query",
                        "description":"Show Action - true or false",
                        "required":false,
                        "type":"boolean"
                    },
                    {
                        "name":"showPermission",
                        "in":"query",
                        "description":"Show Permission - true or false",
                        "required":false,
                        "type":"boolean"
                    },
                    {
                        "name":"metadata",
                        "in":"query",
                        "description":"Metadata - true or false",
                        "required":false,
                        "type":"boolean",
                        "default":false
                    },
                    {
                        "name":"totalResult",
                        "in":"query",
                        "description":"Total Result - true or false",
                        "required":false,
                        "type":"boolean",
                        "default":true
                    },
                    {
                        "name":"noPagingFlag",
                        "in":"query",
                        "description":"No paging - true or false",
                        "required":false,
                        "type":"boolean",
                        "default":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/Collection"
                        }
                    },
                    "400":{
                        "description":"Bad request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"Task list not found"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"tasks-get"
            },
            "post":{
                "tags":[
                    "Manage Tasks"
                ],
                "summary":"Create a Task",
                "description":"Creates a new task and returns the task ID.",
                "operationId":"createTask",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "in":"body",
                        "name":"body",
                        "description":"Create Task",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/CreateTaskAction"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Task Created Successfully. Returns response contains a link to created task.",
                        "schema":{
                            "$ref":"#/definitions/Link"
                        }
                    },
                    "400":{
                        "description":"Bad request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"Not Found. New task is not created."
                    },
                    "409":{
                        "description":"Conflict."
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"tasks-post"
            },
            "put":{
                "tags":[
                    "Manage Tasks"
                ],
                "summary":"Perform Bulk Action on Tasks",
                "description":" Performs action on multiple tasks based on the payload.",
                "operationId":"performBulkActions",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "in":"body",
                        "name":"body",
                        "description":"Action Data",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/Payloads"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/Collection"
                        }
                    },
                    "400":{
                        "description":"Bad request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"Task list not found"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"tasks-put"
            }
        },
        "/tasks/views":{
            "get":{
                "tags":[
                    "Manage Tasks"
                ],
                "summary":"Retrieve Custom Task Lists",
                "description":" Retrieves a list of custom task lists (views) that the current user has defined.",
                "operationId":"getViews",
                "produces":[
                    "application/json"
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/Views"
                        }
                    },
                    "400":{
                        "description":"Bad request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"No view available."
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"tasks-views-get"
            }
        },
        "/tasks/views/{viewname}":{
            "get":{
                "tags":[
                    "Manage Tasks"
                ],
                "summary":"Retrieve a Custom Task List",
                "description":" Retrieves a custom task list by name.",
                "operationId":"getViewBasedTasks",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"viewname",
                        "in":"path",
                        "description":"View Name",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"status",
                        "in":"query",
                        "description":"Task status - ASSIGNED (default), SUSPENDED, WITHDRAWN, EXPIRED, ERROR, ALERTED, NEED_INFORMATION",
                        "required":false,
                        "type":"string",
                        "default":"ASSIGNED"
                    },
                    {
                        "name":"priority",
                        "in":"query",
                        "description":"Task priority from 1 (highest) to 5 (lowest) or Any (default)",
                        "required":false,
                        "type":"array",
                        "items":{
                            "type":"string",
                            "default":"Any"
                        },
                        "collectionFormat":"multi"
                    },
                    {
                        "name":"fromuser",
                        "in":"query",
                        "description":"Previous task assignee in process",
                        "required":false,
                        "type":"array",
                        "items":{
                            "type":"string"
                        },
                        "collectionFormat":"multi"
                    },
                    {
                        "name":"process",
                        "in":"query",
                        "description":"Includes only tasks in a given process",
                        "required":false,
                        "type":"array",
                        "items":{
                            "type":"string"
                        },
                        "collectionFormat":"multi"
                    },
                    {
                        "name":"dueDateFrom",
                        "in":"query",
                        "description":"Start of due date range in the format yyyy-mm-dd hh:mm:ss",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"dueDateTo",
                        "in":"query",
                        "description":"End of due date range in the format yyyy-mm-dd hh:mm:ss",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"assignment",
                        "in":"query",
                        "description":"Task assignees - MY, GROUP,  MY&#95;AND&#95;GROUP (default), MY&#95;AND&#95;GROUP_ALL, REPORTEES, OWNER, REVIEWER, PREVIOUS, ALL, ADMIN",
                        "required":false,
                        "type":"string",
                        "default":"MY_AND_GROUP"
                    },
                    {
                        "name":"keyword",
                        "in":"query",
                        "description":"Keyword in task title",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"Maximum number of items per page, between 1 and 100, default 25",
                        "required":false,
                        "type":"integer",
                        "default":25,
                        "format":"int32"
                    },
                    {
                        "name":"offset",
                        "in":"query",
                        "description":"Index for the first item on a page of list items, default 1",
                        "required":false,
                        "type":"integer",
                        "default":0,
                        "format":"int32"
                    },
                    {
                        "name":"groupBy",
                        "in":"query",
                        "description":"Groups tasks by the selected task attribute",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"pattern",
                        "in":"query",
                        "description":"Includes only to-do tasks if set to ToDo",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"action",
                        "in":"query",
                        "description":"Action",
                        "required":false,
                        "type":"boolean"
                    },
                    {
                        "name":"showPermission",
                        "in":"query",
                        "description":"Permission - true or false",
                        "required":false,
                        "type":"boolean"
                    },
                    {
                        "name":"metadata",
                        "in":"query",
                        "description":"Metadata - true or false(default)",
                        "required":false,
                        "type":"boolean",
                        "default":false
                    },
                    {
                        "name":"totalResult",
                        "in":"query",
                        "description":"Total Result - true (default) or false",
                        "required":false,
                        "type":"boolean",
                        "default":true
                    },
                    {
                        "name":"noPaging",
                        "in":"query",
                        "description":"No paging - true or false",
                        "required":false,
                        "type":"boolean",
                        "default":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/Collection"
                        }
                    },
                    "400":{
                        "description":"Bad request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"Task List not found for view"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"tasks-views-{viewname}-get"
            }
        },
        "/tasks/{id}":{
            "get":{
                "tags":[
                    "Manage Tasks"
                ],
                "summary":"Retrieve a Task",
                "description":" Retrieves a task by task ID.",
                "operationId":"getTask",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "description":"Task ID",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"expanded",
                        "in":"query",
                        "description":"Value of all fields that are to be expanded (detailed) - All, comments, attachments, history, payload, none. If not specified Links to each of the fields is returned. ",
                        "required":true,
                        "type":"string",
                        "default":"none"
                    },
                    {
                        "name":"metadata",
                        "in":"query",
                        "description":"Metadata - true or false",
                        "required":true,
                        "type":"boolean",
                        "default":false
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/Task"
                        }
                    },
                    "400":{
                        "description":"Bad request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"Task not found for given ID."
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"tasks-{id}-get"
            },
            "put":{
                "tags":[
                    "Manage Tasks"
                ],
                "summary":"Perform Action on Task",
                "description":" Performs the action based on payload on a given task ID.",
                "operationId":"performTaskAction",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "description":"Task ID",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "in":"body",
                        "name":"body",
                        "description":"Payload",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/Payload"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/Task"
                        }
                    },
                    "400":{
                        "description":"The tasknumber is invalid.No action will be performed."
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"Task not found."
                    },
                    "409":{
                        "description":"Conflict."
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"tasks-{id}-put"
            }
        },
        "/tasks/{id}/attachments":{
            "get":{
                "tags":[
                    "Manage Tasks"
                ],
                "summary":"Retrieve Task Attachments",
                "description":" Retrieves task attachments.",
                "operationId":"getTaskAttachments",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "description":"Task ID",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/Attachments"
                        }
                    },
                    "400":{
                        "description":"The tasknumber is invalid."
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"Attachments not found for task"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"tasks-{id}-attachments-get"
            },
            "post":{
                "tags":[
                    "Manage Tasks"
                ],
                "summary":"Add a Task Attachment",
                "description":" Adds an attachment to a task.",
                "operationId":"addTaskAttachments",
                "consumes":[
                    "multipart/mixed"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Attachment successfully added",
                        "schema":{
                            "$ref":"#/definitions/Attachments"
                        }
                    },
                    "400":{
                        "description":"Bad request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"Task not found"
                    },
                    "409":{
                        "description":"Stale task object found"
                    },
                    "500":{
                        "description":""
                    }
                },
                "x-internal-id":"tasks-{id}-attachments-post"
            }
        },
        "/tasks/{id}/attachments/{attachmentName}":{
            "get":{
                "tags":[
                    "Manage Tasks"
                ],
                "summary":"Retrieve a Task Attachment by Name",
                "description":" Retrieves an attachment by name.",
                "operationId":"getTaskAttachment",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "description":"Task ID",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"attachmentName",
                        "in":"path",
                        "description":"Attachment name",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/Attachment"
                        }
                    },
                    "400":{
                        "description":"Bad Request."
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"Attachment with given name not found"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"tasks-{id}-attachments-{attachmentName}-get"
            },
            "delete":{
                "tags":[
                    "Manage Tasks"
                ],
                "summary":"Delete a Task Attachment",
                "description":" Deletes an attachment by name.",
                "operationId":"deleteTaskAttachment",
                "produces":[
                    "text/plain",
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "description":"Task ID",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"attachmentName",
                        "in":"path",
                        "description":"Name of attachment to be deleted",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Attachment Removed Successfully."
                    },
                    "400":{
                        "description":"Bad Request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"Conflict"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"tasks-{id}-attachments-{attachmentName}-delete"
            }
        },
        "/tasks/{id}/attachments/{attachmentName}/stream":{
            "get":{
                "tags":[
                    "Manage Tasks"
                ],
                "summary":"Retrieve a Task Attachment as a Stream",
                "description":" Retrieves an attachment by name as a stream.",
                "operationId":"getTaskAttachmentStream",
                "produces":[
                    "multipart/mixed",
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"attachmentName",
                        "in":"path",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Displays the file contents. Response type will be based on the mime type of the attachment."
                    },
                    "400":{
                        "description":"Bad Request."
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"No inputstream exists for attachment with given name"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"tasks-{id}-attachments-{attachmentName}-stream-get"
            }
        },
        "/tasks/{id}/comments":{
            "get":{
                "tags":[
                    "Manage Tasks"
                ],
                "summary":"Retrieve Task Comments",
                "description":" Retrieves task comments.",
                "operationId":"getTaskComments",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/Comments"
                        }
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"tasks-{id}-comments-get"
            },
            "post":{
                "tags":[
                    "Manage Tasks"
                ],
                "summary":"Add a Task Comment",
                "description":" Adds a comment to a task.",
                "operationId":"addTaskComment",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "description":"Task Id",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "in":"body",
                        "name":"body",
                        "description":"CommentRequest",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/CommentRequest"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Comment successfully added",
                        "schema":{
                            "$ref":"#/definitions/Comments"
                        }
                    },
                    "400":{
                        "description":"Bad request"
                    },
                    "404":{
                        "description":"Task not found"
                    },
                    "409":{
                        "description":"Stale task object found"
                    },
                    "500":{
                        "description":""
                    }
                },
                "x-internal-id":"tasks-{id}-comments-post"
            }
        },
        "/tasks/{id}/conversations":{
            "get":{
                "tags":[
                    "Manage Tasks"
                ],
                "summary":"Retrieve List of Task Conversations",
                "description":" Retrieves the Conversations associated with a task.",
                "operationId":"getTaskConversations",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "description":"Task ID",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"name",
                        "in":"query",
                        "description":"Retrieves only the conversation for the specified conversation name",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/ConversationInstances"
                        }
                    },
                    "400":{
                        "description":"Bad Request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"Conversations not found for given task"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"tasks-{id}-conversations-get"
            }
        },
        "/tasks/{id}/conversations/{conversationId}":{
            "get":{
                "tags":[
                    "Manage Tasks"
                ],
                "summary":"Retrieve a Task Conversation",
                "description":" Retrieves the Conversation associated with a task based on conversation ID.",
                "operationId":"getTaskConversation",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "description":"Task Id",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"conversationId",
                        "in":"path",
                        "description":"conversationId",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/ConversationInstance"
                        }
                    },
                    "400":{
                        "description":"Bad Request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"Conversation not found for given task"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"tasks-{id}-conversations-{conversationId}-get"
            }
        },
        "/tasks/{id}/folders":{
            "get":{
                "tags":[
                    "Manage Tasks"
                ],
                "summary":"Retrieve Task DOCs folders",
                "description":" Retrieves the DOCs folders associated with a task.",
                "operationId":"getTaskFolders",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "description":"Task ID",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"name",
                        "in":"query",
                        "description":"Retrieves only the folder for the specified folder name",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/DcsFolders"
                        }
                    },
                    "400":{
                        "description":"Bad Request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"DoCs Folders not found for given task"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"tasks-{id}-folders-get"
            }
        },
        "/tasks/{id}/folders/{folderId}":{
            "get":{
                "tags":[
                    "Manage Tasks"
                ],
                "summary":"Retrieve Task DOCs Folder Details",
                "description":" Retrieves the folder details for a given folder associated with a task.",
                "operationId":"getTaskFolder",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "description":"Task ID",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"folderId",
                        "in":"path",
                        "description":"Folder ID",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/DcsFolder"
                        }
                    },
                    "400":{
                        "description":"Bad Request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"Folder details not found for given folder"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"tasks-{id}-folders-{folderId}-get"
            }
        },
        "/tasks/{id}/form":{
            "get":{
                "tags":[
                    "Manage Tasks"
                ],
                "summary":"Retrieve a Task Form",
                "description":" Retrieves the web form associated with a task.",
                "operationId":"getTaskForm",
                "produces":[
                    "text/html",
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "description":"Task ID",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"user-agent",
                        "in":"header",
                        "description":"User-agent",
                        "required":false,
                        "type":"string",
                        "default":""
                    },
                    {
                        "name":"readOnly",
                        "in":"query",
                        "description":"To retrieve a read only form uri - True; else false",
                        "required":false,
                        "type":"string",
                        "default":"false"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success"
                    },
                    "400":{
                        "description":"Bad Request."
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"Frevvo Form URL not found for given task"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"tasks-{id}-form-get"
            }
        },
        "/tasks/{id}/form/live":{
            "get":{
                "tags":[
                    "Manage Tasks"
                ],
                "summary":"Retrieve Live Form URI",
                "description":" Retrieves the live form URI",
                "operationId":"getFrevvoForm",
                "produces":[
                    "text/plain",
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "description":"Task ID",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"getURI",
                        "in":"query",
                        "description":"True to get the URI as string else false",
                        "required":false,
                        "type":"string",
                        "default":"false"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success"
                    },
                    "400":{
                        "description":"Bad Request."
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"Frevvo Form URL not found for given task"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"tasks-{id}-form-live-get"
            },
            "put":{
                "tags":[
                    "Manage Tasks"
                ],
                "summary":"Update Form",
                "description":" Updates the changes done to the form of a given task by task ID. It takes the payload value as input along with a cookie parameter 'frevvoFormInstance'",
                "operationId":"updateFrevvoChanges",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "description":"Task ID",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success"
                    },
                    "400":{
                        "description":"Bad Request."
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "409":{
                        "description":"Conflict"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"tasks-{id}-form-live-put"
            }
        },
        "/tasks/{id}/history":{
            "get":{
                "tags":[
                    "Manage Tasks"
                ],
                "summary":"Retrieve Task History",
                "description":" Retrieves the history of a task.",
                "operationId":"getTaskHistory",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "description":"Task ID",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"displayStyle",
                        "in":"query",
                        "description":"Style in which to display the history of given task ID - flatList (default)",
                        "required":true,
                        "type":"string",
                        "default":"flatList"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/TaskHistories"
                        }
                    },
                    "400":{
                        "description":"Bad request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"Task History not found"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"tasks-{id}-history-get"
            }
        },
        "/tasks/{id}/payload":{
            "get":{
                "tags":[
                    "Manage Tasks"
                ],
                "summary":"Retrieve the Task Payload",
                "description":" Retrieves the payload of a task. NOTE: The response payload can be of type xml or json.",
                "operationId":"getTaskSummaryField",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "description":"Task ID",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/TaskSummaryField"
                        }
                    },
                    "400":{
                        "description":"Bad request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"Task Payload not found"
                    },
                    "409":{
                        "description":"Conflict"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"tasks-{id}-payload-get"
            },
            "post":{
                "tags":[
                    "Manage Tasks"
                ],
                "summary":"Update the Task Payload",
                "description":" Updates the payload of a task.",
                "operationId":"updateTaskSummaryField",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "text/plain",
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "description":"Task ID",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "in":"body",
                        "name":"body",
                        "description":"Updated Task Payload in JSON",
                        "required":true,
                        "schema":{
                            "type":"string"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Task payload successfully updated."
                    },
                    "400":{
                        "description":"Bad request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "409":{
                        "description":"Conflict"
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"tasks-{id}-payload-post"
            }
        },
        "/webforms/{id}":{
            "get":{
                "tags":[
                    "Manage Webforms"
                ],
                "summary":"Get PCS Web Form Metadata",
                "description":" Retrieves PCS Web Form's JSON metadata by its ID.",
                "operationId":"getWebForm",
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"id",
                        "in":"path",
                        "description":"Web Form Definition ID",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "type":"string"
                        }
                    },
                    "400":{
                        "description":"Bad request"
                    },
                    "401":{
                        "description":"Unauthorized"
                    },
                    "404":{
                        "description":"Form not found for given ID."
                    },
                    "500":{
                        "description":"Internal Server Error"
                    }
                },
                "x-internal-id":"webforms-{id}-get"
            }
        }
    },
    "securityDefinitions":{
        "basicAuth":{
            "type":"basic"
        }
    },
    "definitions":{
        "AbstractProcessDef":{
            "type":"object",
            "properties":{
                "processDefId":{
                    "type":"string"
                },
                "processName":{
                    "type":"string"
                },
                "application":{
                    "type":"string"
                },
                "revision":{
                    "type":"string"
                },
                "domain":{
                    "type":"string"
                },
                "interfaces":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/Interface"
                    }
                },
                "processIcon":{
                    "$ref":"#/definitions/ProcessIcon"
                },
                "processCount":{
                    "type":"integer",
                    "format":"int32"
                },
                "isDocsEnabledFlag":{
                    "type":"boolean",
                    "default":false
                },
                "isConversationEnabledFlag":{
                    "type":"boolean",
                    "default":false
                },
                "category":{
                    "type":"string"
                }
            }
        },
        "Action":{
            "type":"object",
            "properties":{
                "assignees":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/Identity"
                    }
                },
                "id":{
                    "type":"string"
                },
                "type":{
                    "type":"string"
                },
                "processes":{
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "faultActionType":{
                    "type":"string"
                }
            },
            "xml":{
                "name":"action",
                "namespace":"http://xmlns.oracle.com/bpm/rest/processdef"
            }
        },
        "AnalyticsResult":{
            "type":"object",
            "properties":{
                "columnsInfo":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/ColumnMetadata"
                    }
                },
                "rows":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/Row"
                    }
                }
            },
            "xml":{
                "name":"analyticsResult",
                "namespace":"http://xmlns.oracle.com/bpm/rest/analyticsResult"
            }
        },
        "Archive":{
            "type":"object",
            "properties":{
                "id":{
                    "type":"string"
                },
                "state":{
                    "type":"string"
                },
                "requestedBy":{
                    "type":"string"
                },
                "requestTime":{
                    "type":"string",
                    "format":"date-time"
                },
                "properties":{
                    "type":"object",
                    "additionalProperties":{
                        "type":"string"
                    }
                },
                "exports":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/ExportLink"
                    }
                },
                "requester":{
                    "type":"string"
                }
            },
            "xml":{
                "name":"archive",
                "namespace":"http://xmlns.oracle.com/bpm/rest/archive"
            }
        },
        "ArchiveLink":{
            "type":"object",
            "required":[
                "href",
                "mediaType",
                "rel"
            ],
            "properties":{
                "href":{
                    "type":"string",
                    "format":"uri"
                },
                "hreflang":{
                    "type":"string"
                },
                "length":{
                    "type":"integer",
                    "format":"int32"
                },
                "rel":{
                    "type":"string"
                },
                "title":{
                    "type":"string"
                },
                "type":{
                    "type":"string"
                },
                "mediaType":{
                    "type":"string"
                },
                "id":{
                    "type":"string"
                },
                "state":{
                    "type":"string"
                },
                "requestedBy":{
                    "type":"string"
                },
                "requestTime":{
                    "type":"string",
                    "format":"date-time"
                },
                "properties":{
                    "type":"object",
                    "additionalProperties":{
                        "type":"string"
                    }
                },
                "exports":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/ExportLink"
                    }
                },
                "requester":{
                    "type":"string"
                }
            },
            "xml":{
                "name":"archivelink",
                "namespace":"http://xmlns.oracle.com/bpm/rest/archive"
            }
        },
        "ArchiveRequest":{
            "type":"object",
            "properties":{
                "composites":{
                    "$ref":"#/definitions/Composites"
                },
                "compositeStates":{
                    "$ref":"#/definitions/CompositeStates"
                },
                "properties":{
                    "type":"object",
                    "additionalProperties":{
                        "type":"string"
                    }
                },
                "deleteInstances":{
                    "type":"boolean",
                    "default":false
                },
                "deleteRetention":{
                    "type":"string",
                    "format":"date-time"
                },
                "autoArchiveEnabled":{
                    "type":"boolean",
                    "default":false
                }
            },
            "xml":{
                "name":"archiveRequest",
                "namespace":"http://xmlns.oracle.com/bpm/archive/request"
            }
        },
        "Archives":{
            "type":"object",
            "properties":{
                "taskCount":{
                    "type":"integer",
                    "format":"int32",
                    "xml":{
                        "name":"archiveCount"
                    }
                },
                "archives":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/ArchiveLink"
                    }
                }
            },
            "xml":{
                "name":"tasks",
                "namespace":"http://xmlns.oracle.com/bpm/rest/archives"
            }
        },
        "Arg":{
            "type":"object",
            "properties":{
                "name":{
                    "type":"string"
                },
                "type":{
                    "$ref":"#/definitions/QName"
                },
                "schema":{
                    "type":"object",
                    "additionalProperties":{
                        "type":"string"
                    }
                },
                "primitive":{
                    "type":"boolean",
                    "default":false
                }
            }
        },
        "Attachment":{
            "type":"object",
            "properties":{
                "attachmentName":{
                    "type":"string"
                },
                "content":{
                    "type":"string"
                },
                "mimeType":{
                    "type":"string"
                },
                "attachmentScope":{
                    "type":"string"
                },
                "attachmentSize":{
                    "type":"integer",
                    "format":"int64"
                },
                "docAttributes":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/GenericMap"
                    }
                },
                "input":{
                    "type":"string"
                },
                "uri":{
                    "$ref":"#/definitions/Link"
                }
            },
            "xml":{
                "name":"attachment",
                "namespace":"http://xmlns.oracle.com/bpm/rest/tasks"
            }
        },
        "Attachments":{
            "type":"object",
            "properties":{
                "attachment":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/Attachment"
                    }
                }
            },
            "xml":{
                "name":"attachments",
                "namespace":"http://xmlns.oracle.com/bpm/rest/tasks"
            }
        },
        "BPMRuntimeInfo":{
            "type":"object",
            "properties":{
                "features":{
                    "type":"object",
                    "additionalProperties":{
                        "type":"object"
                    }
                }
            },
            "xml":{
                "name":"runtime",
                "namespace":"http://xmlns.oracle.com/bpm/rest/runtime"
            }
        },
        "BodyPart":{
            "type":"object",
            "properties":{
                "entity":{
                    "type":"object"
                },
                "headers":{
                    "type":"object",
                    "additionalProperties":{
                        "type":"array",
                        "items":{
                            "type":"string"
                        }
                    }
                },
                "mediaType":{
                    "$ref":"#/definitions/MediaType"
                },
                "parent":{
                    "$ref":"#/definitions/MultiPart"
                },
                "providers":{
                    "$ref":"#/definitions/Providers"
                },
                "parameterizedHeaders":{
                    "type":"object",
                    "additionalProperties":{
                        "type":"array",
                        "items":{
                            "$ref":"#/definitions/ParameterizedHeader"
                        }
                    }
                },
                "contentDisposition":{
                    "$ref":"#/definitions/ContentDisposition"
                }
            }
        },
        "BusinessQuery":{
            "type":"object",
            "properties":{
                "id":{
                    "type":"string"
                },
                "title":{
                    "type":"string"
                },
                "description":{
                    "type":"string"
                },
                "dataSource":{
                    "type":"string",
                    "enum":[
                        "PROCESS",
                        "ACTIVITY",
                        "ASSIGNMENT"
                    ]
                },
                "applicationName":{
                    "type":"string"
                },
                "queryType":{
                    "type":"string",
                    "enum":[
                        "FLAT",
                        "GROUP"
                    ]
                },
                "dataSeries":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/DataSeriesEntry"
                    }
                },
                "groups":{
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "timeGroupings":{
                    "type":"object",
                    "additionalProperties":{
                        "$ref":"#/definitions/TimeGrouping"
                    }
                },
                "legend":{
                    "type":"string"
                },
                "filter":{
                    "$ref":"#/definitions/Filter"
                },
                "topN":{
                    "type":"integer",
                    "format":"int32"
                },
                "lastNDays":{
                    "type":"integer",
                    "format":"int32"
                },
                "sortEntries":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/SortEntry"
                    }
                },
                "properties":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/Property"
                    }
                }
            },
            "xml":{
                "name":"businessQuery",
                "namespace":"http://xmlns.oracle.com/bpm/rest/analytics/businessquery"
            }
        },
        "Catalog":{
            "type":"object",
            "properties":{
                "name":{
                    "type":"string"
                },
                "catalog":{
                    "type":"array",
                    "xml":{
                        "name":"items"
                    },
                    "items":{
                        "$ref":"#/definitions/Link"
                    }
                }
            },
            "xml":{
                "name":"catalog",
                "namespace":"http://xmlns.oracle.com/bpm/api"
            }
        },
        "Collection":{
            "type":"object",
            "properties":{
                "totalResult":{
                    "type":"boolean",
                    "default":false
                },
                "limit":{
                    "type":"integer",
                    "format":"int32"
                },
                "userLink":{
                    "xml":{
                        "name":"user"
                    },
                    "$ref":"#/definitions/Link"
                },
                "count":{
                    "type":"integer",
                    "format":"int32"
                },
                "offset":{
                    "type":"integer",
                    "format":"int32"
                },
                "hasMore":{
                    "type":"boolean",
                    "default":false
                },
                "items":{
                    "type":"array",
                    "items":{
                        "type":"object"
                    }
                },
                "links":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/Link"
                    }
                }
            },
            "xml":{
                "name":"Collection",
                "namespace":"http://xmlns.oracle.com/bpm/rest/v3/common/"
            }
        },
        "CollectionGroup":{
            "type":"object",
            "properties":{
                "totalResult":{
                    "type":"boolean",
                    "default":false
                },
                "limit":{
                    "type":"integer",
                    "format":"int32"
                },
                "userLink":{
                    "xml":{
                        "name":"user"
                    },
                    "$ref":"#/definitions/Link"
                },
                "count":{
                    "type":"integer",
                    "format":"int32"
                },
                "offset":{
                    "type":"integer",
                    "format":"int32"
                },
                "hasMore":{
                    "type":"boolean",
                    "default":false
                },
                "items":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/Group"
                    }
                },
                "links":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/Link"
                    }
                }
            },
            "xml":{
                "name":"Collection",
                "namespace":"http://xmlns.oracle.com/bpm/rest/v3/common/"
            }
        },
        "CollectionIdentity":{
            "type":"object",
            "properties":{
                "totalResult":{
                    "type":"boolean",
                    "default":false
                },
                "limit":{
                    "type":"integer",
                    "format":"int32"
                },
                "userLink":{
                    "xml":{
                        "name":"user"
                    },
                    "$ref":"#/definitions/Link"
                },
                "count":{
                    "type":"integer",
                    "format":"int32"
                },
                "offset":{
                    "type":"integer",
                    "format":"int32"
                },
                "hasMore":{
                    "type":"boolean",
                    "default":false
                },
                "items":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/Identity"
                    }
                },
                "links":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/Link"
                    }
                }
            },
            "xml":{
                "name":"Collection",
                "namespace":"http://xmlns.oracle.com/bpm/rest/v3/common/"
            }
        },
        "CollectionRole":{
            "type":"object",
            "properties":{
                "totalResult":{
                    "type":"boolean",
                    "default":false
                },
                "limit":{
                    "type":"integer",
                    "format":"int32"
                },
                "userLink":{
                    "xml":{
                        "name":"user"
                    },
                    "$ref":"#/definitions/Link"
                },
                "count":{
                    "type":"integer",
                    "format":"int32"
                },
                "offset":{
                    "type":"integer",
                    "format":"int32"
                },
                "hasMore":{
                    "type":"boolean",
                    "default":false
                },
                "items":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/Role"
                    }
                },
                "links":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/Link"
                    }
                }
            },
            "xml":{
                "name":"Collection",
                "namespace":"http://xmlns.oracle.com/bpm/rest/v3/common/"
            }
        },
        "CollectionUser":{
            "type":"object",
            "properties":{
                "totalResult":{
                    "type":"boolean",
                    "default":false
                },
                "limit":{
                    "type":"integer",
                    "format":"int32"
                },
                "userLink":{
                    "xml":{
                        "name":"user"
                    },
                    "$ref":"#/definitions/Link"
                },
                "count":{
                    "type":"integer",
                    "format":"int32"
                },
                "offset":{
                    "type":"integer",
                    "format":"int32"
                },
                "hasMore":{
                    "type":"boolean",
                    "default":false
                },
                "items":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/User"
                    }
                },
                "links":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/Link"
                    }
                }
            },
            "xml":{
                "name":"Collection",
                "namespace":"http://xmlns.oracle.com/bpm/rest/v3/common/"
            }
        },
        "ColumnMetadata":{
            "type":"object",
            "properties":{
                "columnName":{
                    "type":"string"
                },
                "type":{
                    "type":"string"
                }
            }
        },
        "Comment":{
            "type":"object",
            "properties":{
                "commentStr":{
                    "type":"string"
                },
                "commentScope":{
                    "type":"string"
                }
            },
            "xml":{
                "name":"comment",
                "namespace":"http://xmlns.oracle.com/bpm/rest/tasks"
            }
        },
        "CommentRequest":{
            "type":"object",
            "properties":{
                "commentStr":{
                    "type":"string"
                },
                "commentScope":{
                    "type":"string"
                },
                "displayNameLanguage":{
                    "type":"string"
                },
                "updatedDate":{
                    "type":"string"
                },
                "updatedBy":{
                    "type":"string"
                }
            },
            "xml":{
                "name":"commentRequest",
                "namespace":"http://xmlns.oracle.com/bpm/rest/tasks"
            }
        },
        "Comments":{
            "type":"object",
            "properties":{
                "comments":{
                    "type":"array",
                    "xml":{
                        "name":"comment",
                        "wrapped":true
                    },
                    "items":{
                        "$ref":"#/definitions/Comment"
                    }
                }
            },
            "xml":{
                "name":"comments",
                "namespace":"http://xmlns.oracle.com/bpm/rest/tasks"
            }
        },
        "CompositeStates":{
            "type":"object",
            "properties":{
                "compositeState":{
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                }
            },
            "xml":{
                "name":"compositesStates"
            }
        },
        "Composites":{
            "type":"object",
            "properties":{
                "compositeDN":{
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                }
            },
            "xml":{
                "name":"composites"
            }
        },
        "ContentDisposition":{
            "type":"object",
            "properties":{
                "type":{
                    "type":"string"
                },
                "parameters":{
                    "type":"object",
                    "additionalProperties":{
                        "type":"string"
                    }
                },
                "fileName":{
                    "type":"string"
                },
                "creationDate":{
                    "type":"string",
                    "format":"date-time"
                },
                "modificationDate":{
                    "type":"string",
                    "format":"date-time"
                },
                "readDate":{
                    "type":"string",
                    "format":"date-time"
                },
                "size":{
                    "type":"integer",
                    "format":"int64"
                }
            }
        },
        "Conversation":{
            "type":"object",
            "properties":{
                "postMessageOnActivityEntryFlag":{
                    "type":"boolean",
                    "default":false
                },
                "postMessageOnActivityExitFlag":{
                    "type":"boolean",
                    "default":false
                },
                "postHumanTaskMessagesFlag":{
                    "type":"boolean",
                    "default":false
                },
                "name":{
                    "type":"string"
                },
                "conversationId":{
                    "type":"string"
                },
                "description":{
                    "type":"string"
                }
            }
        },
        "ConversationInstance":{
            "type":"object",
            "properties":{
                "conversationId":{
                    "type":"string"
                },
                "conversationName":{
                    "type":"string"
                },
                "flowId":{
                    "type":"string"
                },
                "processId":{
                    "type":"string"
                },
                "appLink":{
                    "type":"string"
                },
                "conversationTitle":{
                    "type":"string"
                },
                "clistURL":{
                    "type":"string"
                }
            },
            "xml":{
                "name":"conversationInstanceList",
                "namespace":"http://xmlns.oracle.com/bpm/rest/tasks"
            }
        },
        "ConversationInstances":{
            "type":"object",
            "properties":{
                "conversations":{
                    "type":"array",
                    "xml":{
                        "name":"conversationInstanceList"
                    },
                    "items":{
                        "$ref":"#/definitions/ConversationInstance"
                    }
                },
                "host":{
                    "type":"string"
                },
                "instanceName":{
                    "type":"string"
                }
            },
            "xml":{
                "name":"conversationInstances",
                "namespace":"http://xmlns.oracle.com/bpm/rest/tasks"
            }
        },
        "Conversations":{
            "type":"object",
            "properties":{
                "conversations":{
                    "type":"array",
                    "xml":{
                        "name":"conversations",
                        "wrapped":true
                    },
                    "items":{
                        "$ref":"#/definitions/Conversation"
                    }
                }
            },
            "xml":{
                "name":"conversations",
                "namespace":"http://xmlns.oracle.com/bpm/rest/tasks"
            }
        },
        "CreateTaskAction":{
            "type":"object",
            "properties":{
                "assignees":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/Identity"
                    }
                },
                "taskId":{
                    "type":"string",
                    "xml":{
                        "name":"taskid"
                    }
                },
                "creator":{
                    "type":"string"
                },
                "dueDate":{
                    "type":"string"
                },
                "priority":{
                    "type":"integer",
                    "format":"int32"
                },
                "routingSlip":{
                    "$ref":"#/definitions/RoutingSlip"
                },
                "startDate":{
                    "type":"string"
                },
                "taskDefinitionId":{
                    "type":"string"
                },
                "title":{
                    "type":"string"
                }
            },
            "xml":{
                "name":"createTaskAction",
                "namespace":"http://xmlns.oracle.com/bpm/rest/tasks"
            }
        },
        "DataSeriesEntry":{
            "type":"object",
            "properties":{
                "measureColumn":{
                    "type":"string"
                },
                "aggregateOperation":{
                    "type":"string",
                    "enum":[
                        "COUNT",
                        "SUM",
                        "AVG",
                        "MIN",
                        "MEDIAN",
                        "MAX",
                        "STDDEV",
                        "COUNTDISTINCT",
                        "VARIANCE"
                    ]
                }
            },
            "xml":{
                "name":"DataSeriesEntry",
                "namespace":"http://xmlns.oracle.com/bpm/rest/analytics/businessquery"
            }
        },
        "DcsFolder":{
            "type":"object",
            "properties":{
                "folderId":{
                    "type":"string"
                },
                "folderName":{
                    "type":"string"
                },
                "type":{
                    "type":"string"
                },
                "permission":{
                    "type":"string"
                },
                "mafLink":{
                    "type":"string"
                },
                "appLink":{
                    "type":"string"
                }
            }
        },
        "DcsFolders":{
            "type":"object",
            "properties":{
                "folders":{
                    "type":"array",
                    "xml":{
                        "name":"dcsfolder",
                        "wrapped":true
                    },
                    "items":{
                        "$ref":"#/definitions/DcsFolder"
                    }
                }
            },
            "xml":{
                "name":"dcsfolders",
                "namespace":"http://xmlns.oracle.com/bpm/rest/tasks"
            }
        },
        "Documents":{
            "type":"object",
            "xml":{
                "name":"documents",
                "namespace":"http://xmlns.oracle.com/bpm/rest/process-definitions"
            }
        },
        "ExportLink":{
            "type":"object",
            "required":[
                "href",
                "mediaType",
                "rel"
            ],
            "properties":{
                "href":{
                    "type":"string",
                    "format":"uri"
                },
                "hreflang":{
                    "type":"string"
                },
                "length":{
                    "type":"integer",
                    "format":"int32"
                },
                "rel":{
                    "type":"string"
                },
                "title":{
                    "type":"string"
                },
                "type":{
                    "type":"string"
                },
                "mediaType":{
                    "type":"string"
                },
                "name":{
                    "type":"string"
                },
                "md5":{
                    "type":"string"
                }
            },
            "xml":{
                "name":"exportlink",
                "namespace":"http://xmlns.oracle.com/bpm/rest/archive"
            }
        },
        "Exports":{
            "type":"object",
            "properties":{
                "exportLinks":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/ExportLink"
                    }
                },
                "exportCount":{
                    "type":"integer",
                    "format":"int32"
                }
            },
            "xml":{
                "name":"exports",
                "namespace":"http://xmlns.oracle.com/bpm/rest/archive"
            }
        },
        "Filter":{
            "type":"object",
            "properties":{
                "filterType":{
                    "type":"string",
                    "enum":[
                        "ALL",
                        "ANY"
                    ]
                },
                "filterEntries":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/FilterEntry"
                    }
                },
                "branches":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/Filter"
                    }
                }
            },
            "xml":{
                "name":"filter",
                "namespace":"http://xmlns.oracle.com/bpm/rest/analytics/businessquery"
            }
        },
        "FilterEntry":{
            "type":"object",
            "properties":{
                "columnName":{
                    "type":"string"
                },
                "operator":{
                    "type":"string",
                    "enum":[
                        "EQ",
                        "LT",
                        "LE",
                        "GT",
                        "GE",
                        "NE",
                        "LIKE",
                        "NOTLIKE",
                        "NULL",
                        "NOTNULL"
                    ]
                },
                "value":{
                    "type":"string"
                },
                "columnDataType":{
                    "type":"string",
                    "enum":[
                        "VARCHAR",
                        "DATETIME",
                        "INT",
                        "DECIMAL",
                        "FLOAT",
                        "BOOLEAN"
                    ]
                }
            },
            "xml":{
                "name":"filterEntry",
                "namespace":"http://xmlns.oracle.com/bpm/rest/analytics/businessquery"
            }
        },
        "GenericMap":{
            "type":"object",
            "properties":{
                "dataType":{
                    "type":"string"
                },
                "name":{
                    "type":"string"
                },
                "readOnly":{
                    "type":"string"
                },
                "value":{
                    "type":"string"
                },
                "displayName":{
                    "type":"string"
                },
                "category":{
                    "type":"string"
                }
            },
            "xml":{
                "name":"genericMap",
                "namespace":"http://xmlns.oracle.com/bpm/rest/tasks"
            }
        },
        "Group":{
            "type":"object",
            "properties":{
                "id":{
                    "type":"string"
                },
                "type":{
                    "type":"string"
                },
                "email":{
                    "type":"string"
                },
                "identity":{
                    "$ref":"#/definitions/Link"
                },
                "firstName":{
                    "type":"string"
                },
                "lastName":{
                    "type":"string"
                },
                "middleName":{
                    "type":"string"
                },
                "mobile":{
                    "type":"string"
                },
                "workPhone":{
                    "type":"string"
                },
                "grantees":{
                    "$ref":"#/definitions/CollectionUser"
                },
                "managers":{
                    "$ref":"#/definitions/CollectionUser"
                },
                "participants":{
                    "$ref":"#/definitions/CollectionUser"
                },
                "tenantId":{
                    "type":"string"
                },
                "tenantName":{
                    "type":"string"
                }
            },
            "xml":{
                "name":"group",
                "namespace":"http://xmlns.oracle.com/bpm/rest/identities/group"
            }
        },
        "Identity":{
            "type":"object",
            "properties":{
                "id":{
                    "type":"string"
                },
                "type":{
                    "type":"string"
                },
                "email":{
                    "type":"string"
                },
                "identity":{
                    "$ref":"#/definitions/Link"
                },
                "firstName":{
                    "type":"string"
                },
                "lastName":{
                    "type":"string"
                },
                "middleName":{
                    "type":"string"
                },
                "mobile":{
                    "type":"string"
                },
                "workPhone":{
                    "type":"string"
                }
            },
            "xml":{
                "name":"identity",
                "namespace":"http://xmlns.oracle.com/bpm/rest/identities"
            }
        },
        "IncomingDocument":{
            "type":"object",
            "properties":{
                "permission":{
                    "type":"string"
                },
                "name":{
                    "type":"string"
                }
            }
        },
        "IncomingFolder":{
            "type":"object",
            "properties":{
                "permission":{
                    "type":"string"
                },
                "name":{
                    "type":"string"
                }
            }
        },
        "IncomingFolders":{
            "type":"object",
            "properties":{
                "incomingFolders":{
                    "type":"array",
                    "xml":{
                        "name":"incoming-folders",
                        "wrapped":true
                    },
                    "items":{
                        "$ref":"#/definitions/IncomingFolder"
                    }
                }
            },
            "xml":{
                "name":"incoming-folders",
                "namespace":"http://xmlns.oracle.com/bpm/rest/process-definitions"
            }
        },
        "Interface":{
            "type":"object",
            "properties":{
                "title":{
                    "type":"string"
                },
                "serviceName":{
                    "type":"string"
                },
                "operation":{
                    "type":"string"
                },
                "startType":{
                    "type":"string"
                },
                "category":{
                    "type":"string"
                },
                "args":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/Arg"
                    }
                },
                "formMetadata":{
                    "type":"string"
                },
                "description":{
                    "type":"string"
                }
            }
        },
        "Link":{
            "type":"object",
            "required":[
                "href",
                "mediaType",
                "rel"
            ],
            "properties":{
                "href":{
                    "type":"string",
                    "format":"uri"
                },
                "hreflang":{
                    "type":"string"
                },
                "length":{
                    "type":"integer",
                    "format":"int32"
                },
                "rel":{
                    "type":"string"
                },
                "title":{
                    "type":"string"
                },
                "type":{
                    "type":"string"
                },
                "mediaType":{
                    "type":"string"
                }
            },
            "xml":{
                "name":"link",
                "namespace":"http://xmlns.oracle.com/bpm/rest"
            }
        },
        "MediaType":{
            "type":"object",
            "properties":{
                "type":{
                    "type":"string"
                },
                "subtype":{
                    "type":"string"
                },
                "parameters":{
                    "type":"object",
                    "additionalProperties":{
                        "type":"string"
                    }
                },
                "wildcardType":{
                    "type":"boolean",
                    "default":false
                },
                "wildcardSubtype":{
                    "type":"boolean",
                    "default":false
                }
            }
        },
        "MessageInput":{
            "type":"object",
            "properties":{
                "processDefId":{
                    "type":"string"
                },
                "serviceName":{
                    "type":"string"
                },
                "operation":{
                    "type":"string"
                },
                "payload":{
                    "type":"string"
                },
                "params":{
                    "type":"object",
                    "additionalProperties":{
                        "type":"object"
                    }
                },
                "action":{
                    "type":"string"
                }
            },
            "xml":{
                "name":"messageInput",
                "namespace":"http://xmlns.oracle.com/bpm/rest/processes"
            }
        },
        "MetadataCatalog":{
            "type":"object",
            "properties":{
                "metadataCatalog":{
                    "type":"array",
                    "xml":{
                        "name":"items"
                    },
                    "items":{
                        "$ref":"#/definitions/Catalog"
                    }
                },
                "links":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/Link"
                    }
                }
            },
            "xml":{
                "name":"metadata-catalog",
                "namespace":"http://xmlns.oracle.com/bpm/api"
            }
        },
        "MultiPart":{
            "type":"object",
            "properties":{
                "entity":{
                    "type":"object"
                },
                "headers":{
                    "type":"object",
                    "additionalProperties":{
                        "type":"array",
                        "items":{
                            "type":"string"
                        }
                    }
                },
                "mediaType":{
                    "$ref":"#/definitions/MediaType"
                },
                "parent":{
                    "$ref":"#/definitions/MultiPart"
                },
                "providers":{
                    "$ref":"#/definitions/Providers"
                },
                "bodyParts":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/BodyPart"
                    }
                },
                "parameterizedHeaders":{
                    "type":"object",
                    "additionalProperties":{
                        "type":"array",
                        "items":{
                            "$ref":"#/definitions/ParameterizedHeader"
                        }
                    }
                },
                "contentDisposition":{
                    "$ref":"#/definitions/ContentDisposition"
                }
            }
        },
        "OOTBDashboardQueryDefinition":{
            "type":"object",
            "properties":{
                "queryName":{
                    "type":"string",
                    "enum":[
                        "CLOSED_PROCESS_ANALYSIS_THIS_MONTH_BILLBOARD",
                        "CLOSED_PROCESS_ANALYSIS_THIS_MONTH_TABLE",
                        "CLOSED_PROCESS_ANALYSIS_THIS_WEEK_TABLE",
                        "CLOSED_PROCESS_ANALYSIS_THIS_WEEK_BILLBOARD",
                        "CLOSED_PROCESS_ANALYSIS_TODAY_BILLBOARD",
                        "CLOSED_PROCESS_ANALYSIS_TODAY_TABLE",
                        "CYCLE_TIME_BY_PROCESS_BILLBOARD",
                        "CYCLE_TIME_BY_PROCESS_CHART",
                        "CYCLE_TIME_BY_TASK_BILLBOARD",
                        "CYCLE_TIME_BY_TASK_CHART",
                        "DUE_DATE_ANALYSIS_BY_ASSIGNEE_TREEMAP",
                        "DUE_DATE_ANALYSIS_BY_OPEN_PROCESS_TREEMAP",
                        "DUE_DATE_ANALYSIS_BY_OPEN_TASKS_TREEMAP",
                        "OPEN_ASSIGNEES_ON_TRACK_ANALYSIS_CHART",
                        "OPEN_ASSIGNEES_DUE_SOON_ANALYSIS_CHART",
                        "OPEN_ASSIGNEES_OVER_DUE_ANALYSIS_CHART",
                        "OPEN_TASK_ON_TRACK_ANALYSIS_CHART",
                        "OPEN_TASK_DUE_SOON_ANALYSIS_CHART",
                        "OPEN_TASK_OVER_DUE_ANALYSIS_CHART",
                        "OPEN_PROCESS_SUMMARY_BILLBOARD",
                        "OPEN_PROCESS_SUMMARY_TABLE",
                        "PROCESS_HEALTH_BILLBOARD",
                        "PROCESS_HEALTH_TABLE",
                        "WORKLOAD_ANALYSIS_BILLBOARD",
                        "WORKLOAD_BY_PROCESS_CHART",
                        "WORKLOAD_BY_TASK_CHART",
                        "PROCESS_LABEL_LIST",
                        "APPLICATION_NAME_LIST"
                    ]
                },
                "queryString":{
                    "type":"string"
                },
                "supportedFilters":{
                    "type":"array",
                    "items":{
                        "type":"string",
                        "enum":[
                            "PROCESS_NAMES",
                            "ASSIGNEE_TYPE",
                            "TOPN",
                            "DAYS_AGO",
                            "APPLICATION_NAME"
                        ]
                    }
                },
                "dimensionColumns":{
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "measureColumns":{
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                }
            },
            "xml":{
                "name":"ootbDashboardQueryDefinition",
                "namespace":"http://xmlns.oracle.com/bpm/rest/ootbDashboardQueryDefinition"
            }
        },
        "OutcomePercentage":{
            "type":"object",
            "properties":{
                "outcome":{
                    "type":"string"
                },
                "percentage":{
                    "type":"integer",
                    "format":"int32"
                },
                "type":{
                    "type":"string"
                }
            },
            "xml":{
                "name":"outcomePercentage",
                "namespace":"http://xmlns.oracle.com/bpm/rest/routingslip"
            }
        },
        "ParallelCompletionCriteria":{
            "type":"object",
            "properties":{
                "defaultOutcome":{
                    "type":"string"
                },
                "outcomePercentages":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/OutcomePercentage"
                    }
                },
                "waitForAllVotes":{
                    "type":"boolean",
                    "default":false
                }
            },
            "xml":{
                "name":"parallelCompletionCriteria",
                "namespace":"http://xmlns.oracle.com/bpm/rest/routingslip"
            }
        },
        "ParameterizedHeader":{
            "type":"object",
            "properties":{
                "value":{
                    "type":"string"
                },
                "parameters":{
                    "type":"object",
                    "additionalProperties":{
                        "type":"string"
                    }
                }
            }
        },
        "Payload":{
            "type":"object",
            "properties":{
                "assignees":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/Identity"
                    }
                },
                "id":{
                    "type":"string"
                },
                "type":{
                    "type":"string"
                },
                "processes":{
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "faultActionType":{
                    "type":"string"
                },
                "identities":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/Identity"
                    }
                },
                "action":{
                    "$ref":"#/definitions/Action"
                },
                "comment":{
                    "$ref":"#/definitions/Comment"
                },
                "comments":{
                    "type":"string"
                },
                "taskSummaryField":{
                    "$ref":"#/definitions/TaskSummaryField"
                },
                "priority":{
                    "type":"integer",
                    "format":"int32"
                }
            },
            "xml":{
                "name":"payload",
                "namespace":"http://xmlns.oracle.com/bpm/rest/tasks"
            }
        },
        "Payloads":{
            "type":"object",
            "properties":{
                "assignees":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/Identity"
                    }
                },
                "id":{
                    "type":"string"
                },
                "type":{
                    "type":"string"
                },
                "processes":{
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "faultActionType":{
                    "type":"string"
                },
                "identities":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/Identity"
                    }
                },
                "action":{
                    "$ref":"#/definitions/Action"
                },
                "comment":{
                    "$ref":"#/definitions/Comment"
                },
                "comments":{
                    "type":"string"
                },
                "taskSummaryField":{
                    "$ref":"#/definitions/TaskSummaryField"
                },
                "priority":{
                    "type":"integer",
                    "format":"int32"
                },
                "tasks":{
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                }
            },
            "xml":{
                "name":"actions",
                "namespace":"http://xmlns.oracle.com/bpm/rest/payloads"
            }
        },
        "ProcessDefs":{
            "type":"object",
            "properties":{
                "items":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/AbstractProcessDef"
                    }
                }
            },
            "xml":{
                "name":"processDefs",
                "namespace":"http://xmlns.oracle.com/bpm/rest/processdef"
            }
        },
        "ProcessIcon":{
            "type":"object",
            "properties":{
                "initials":{
                    "type":"string"
                },
                "colorCode":{
                    "type":"string"
                }
            }
        },
        "ProcessInstance":{
            "type":"object",
            "properties":{
                "title":{
                    "type":"string"
                },
                "processId":{
                    "type":"string"
                },
                "processDefId":{
                    "type":"string"
                },
                "processName":{
                    "type":"string"
                },
                "priority":{
                    "type":"integer",
                    "format":"int32"
                },
                "ownedBy":{
                    "type":"string",
                    "xml":{
                        "name":"owner"
                    }
                },
                "createdBy":{
                    "type":"string",
                    "xml":{
                        "name":"creator"
                    }
                },
                "conversationId":{
                    "type":"string"
                },
                "state":{
                    "type":"string"
                },
                "createdDate":{
                    "type":"string"
                },
                "expirationDate":{
                    "type":"string"
                },
                "dueDate":{
                    "type":"string"
                },
                "processDN":{
                    "type":"string"
                },
                "processNumber":{
                    "type":"integer",
                    "format":"int32"
                },
                "href":{
                    "type":"string",
                    "format":"uri"
                },
                "isDocsEnabledFlag":{
                    "type":"boolean",
                    "default":false
                },
                "isConversationEnabledFlag":{
                    "type":"boolean",
                    "default":false
                }
            },
            "xml":{
                "name":"processInstance",
                "namespace":"http://xmlns.oracle.com/bpm/rest/processdef"
            }
        },
        "Property":{
            "type":"object",
            "properties":{
                "name":{
                    "type":"string"
                },
                "value":{
                    "type":"string"
                }
            },
            "xml":{
                "name":"property",
                "namespace":"http://xmlns.oracle.com/bpm/rest/analytics/businessquery"
            }
        },
        "Providers":{
            "type":"object"
        },
        "QName":{
            "type":"object",
            "properties":{
                "namespaceURI":{
                    "type":"string"
                },
                "localPart":{
                    "type":"string"
                },
                "prefix":{
                    "type":"string"
                }
            }
        },
        "RequestResponse":{
            "type":"object",
            "properties":{
                "link":{
                    "type":"string"
                },
                "id":{
                    "type":"string",
                    "xml":{
                        "name":"jobId"
                    }
                }
            },
            "xml":{
                "name":"request-response",
                "namespace":"http://xmlns.oracle.com/bpm/archive/request-response"
            }
        },
        "Resource":{
            "type":"object",
            "properties":{
                "identityType":{
                    "type":"string"
                },
                "type":{
                    "type":"string"
                },
                "value":{
                    "type":"string"
                }
            },
            "xml":{
                "name":"resource",
                "namespace":"http://xmlns.oracle.com/bpm/rest/routingslip"
            }
        },
        "Role":{
            "type":"object",
            "properties":{
                "id":{
                    "type":"string"
                },
                "type":{
                    "type":"string"
                },
                "email":{
                    "type":"string"
                },
                "identity":{
                    "$ref":"#/definitions/Link"
                },
                "firstName":{
                    "type":"string"
                },
                "lastName":{
                    "type":"string"
                },
                "middleName":{
                    "type":"string"
                },
                "mobile":{
                    "type":"string"
                },
                "workPhone":{
                    "type":"string"
                },
                "grantees":{
                    "$ref":"#/definitions/CollectionUser"
                },
                "managers":{
                    "$ref":"#/definitions/CollectionUser"
                },
                "participants":{
                    "$ref":"#/definitions/CollectionUser"
                }
            },
            "xml":{
                "name":"role",
                "namespace":"http://xmlns.oracle.com/bpm/rest/Collection<Identity>/role"
            }
        },
        "RoutingSlip":{
            "type":"object",
            "properties":{
                "parallelCompletionCriteria":{
                    "$ref":"#/definitions/ParallelCompletionCriteria"
                },
                "resources":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/Resource"
                    }
                },
                "routingType":{
                    "type":"string"
                }
            },
            "xml":{
                "name":"routingSlip",
                "namespace":"http://xmlns.oracle.com/bpm/rest/routingslip"
            }
        },
        "Row":{
            "type":"object",
            "properties":{
                "values":{
                    "type":"array",
                    "items":{
                        "type":"object"
                    }
                }
            }
        },
        "SortEntry":{
            "type":"object",
            "properties":{
                "columnName":{
                    "type":"string"
                },
                "descending":{
                    "type":"boolean",
                    "default":false
                }
            },
            "xml":{
                "name":"sortEntry",
                "namespace":"http://xmlns.oracle.com/bpm/rest/analytics/businessquery"
            }
        },
        "Task":{
            "type":"object",
            "required":[
                "href",
                "mediaType",
                "rel"
            ],
            "properties":{
                "href":{
                    "type":"string",
                    "format":"uri"
                },
                "hreflang":{
                    "type":"string"
                },
                "length":{
                    "type":"integer",
                    "format":"int32"
                },
                "rel":{
                    "type":"string"
                },
                "title":{
                    "type":"string"
                },
                "type":{
                    "type":"string"
                },
                "mediaType":{
                    "type":"string"
                },
                "attachments":{
                    "type":"object"
                },
                "history":{
                    "type":"object"
                },
                "comments":{
                    "type":"object"
                },
                "payload":{
                    "type":"object"
                },
                "isDocsEnabledFlag":{
                    "type":"boolean",
                    "default":false
                },
                "isConversationEnabledFlag":{
                    "type":"boolean",
                    "default":false
                }
            },
            "xml":{
                "name":"task",
                "namespace":"http://xmlns.oracle.com/bpm/rest/tasks"
            }
        },
        "TaskHistories":{
            "type":"object",
            "properties":{
                "taskHistories":{
                    "type":"array",
                    "xml":{
                        "name":"taskHistory",
                        "wrapped":true
                    },
                    "items":{
                        "$ref":"#/definitions/TaskHistory"
                    }
                }
            },
            "xml":{
                "name":"taskHistories",
                "namespace":"http://xmlns.oracle.com/bpm/rest/tasks"
            }
        },
        "TaskHistory":{
            "type":"object",
            "properties":{
                "actionName":{
                    "type":"string"
                },
                "displayName":{
                    "type":"string"
                },
                "userId":{
                    "type":"string"
                },
                "pattern":{
                    "type":"string"
                },
                "reason":{
                    "type":"string"
                },
                "updatedDate":{
                    "type":"string"
                }
            },
            "xml":{
                "name":"taskHistory",
                "namespace":"http://xmlns.oracle.com/bpm/rest/tasks"
            }
        },
        "TaskSummaryField":{
            "type":"object",
            "properties":{
                "summaryFields":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/GenericMap"
                    }
                },
                "comment":{
                    "type":"string"
                },
                "priority":{
                    "type":"integer",
                    "format":"int32"
                },
                "xmlPayload":{
                    "type":"string"
                }
            },
            "xml":{
                "name":"payload",
                "namespace":"http://xmlns.oracle.com/bpm/rest/tasks"
            }
        },
        "TimeGrouping":{
            "type":"object",
            "properties":{
                "timeGroupingUnits":{
                    "type":"array",
                    "items":{
                        "type":"string",
                        "enum":[
                            "YEAR",
                            "QUARTER",
                            "MONTH",
                            "WEEK",
                            "DAYOFYEAR",
                            "DAYOFMONTH",
                            "DAYOFWEEK",
                            "HOUR",
                            "MINUTE",
                            "SECOND"
                        ]
                    }
                }
            },
            "xml":{
                "name":"timeGrouping",
                "namespace":"http://xmlns.oracle.com/bpm/rest/analytics/businessquery"
            }
        },
        "User":{
            "type":"object",
            "properties":{
                "id":{
                    "type":"string"
                },
                "type":{
                    "type":"string"
                },
                "email":{
                    "type":"string"
                },
                "identity":{
                    "$ref":"#/definitions/Link"
                },
                "firstName":{
                    "type":"string"
                },
                "lastName":{
                    "type":"string"
                },
                "middleName":{
                    "type":"string"
                },
                "mobile":{
                    "type":"string"
                },
                "workPhone":{
                    "type":"string"
                },
                "country":{
                    "type":"string"
                },
                "fax":{
                    "type":"string"
                },
                "language":{
                    "type":"string"
                },
                "adminFlag":{
                    "type":"boolean",
                    "default":false
                },
                "manager":{
                    "$ref":"#/definitions/Link"
                },
                "pager":{
                    "type":"string"
                },
                "reportees":{
                    "$ref":"#/definitions/CollectionIdentity"
                },
                "timezone":{
                    "type":"string"
                },
                "homePhone":{
                    "type":"string"
                },
                "roles":{
                    "$ref":"#/definitions/CollectionRole"
                },
                "groups":{
                    "$ref":"#/definitions/CollectionGroup"
                }
            },
            "xml":{
                "name":"user",
                "namespace":"http://xmlns.oracle.com/bpm/rest/identities/user"
            }
        },
        "Views":{
            "type":"object",
            "properties":{
                "title":{
                    "type":"string"
                },
                "userLink":{
                    "$ref":"#/definitions/Link"
                },
                "link":{
                    "type":"array",
                    "xml":{
                        "name":"views"
                    },
                    "items":{
                        "$ref":"#/definitions/Link"
                    }
                }
            },
            "xml":{
                "name":"tasks",
                "namespace":"http://xmlns.oracle.com/bpm/rest/tasks"
            }
        }
    }
}